{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap f7c531a9686cd33d674b","webpack:///./src/iq.ts","webpack:///./src/constants/index.ts","webpack:///./src/constants/bt709.ts","webpack:///./src/conversion/index.ts","webpack:///./src/conversion/rgb2xyz.ts","webpack:///./src/conversion/rgb2hsl.ts","webpack:///./src/utils/arithmetic.ts","webpack:///./src/conversion/rgb2lab.ts","webpack:///./src/conversion/xyz2lab.ts","webpack:///./src/conversion/lab2xyz.ts","webpack:///./src/conversion/lab2rgb.ts","webpack:///./src/conversion/xyz2rgb.ts","webpack:///./src/distance/index.ts","webpack:///./src/distance/cie94.ts","webpack:///./src/distance/ciede2000.ts","webpack:///./src/distance/cmetric.ts","webpack:///./src/distance/euclidean.ts","webpack:///./src/distance/euclideanRgbQuantWithAlpha.ts","webpack:///./src/distance/euclideanRgbQuantWOAlpha.ts","webpack:///./src/distance/manhattan.ts","webpack:///./src/distance/manhattanSRGB.ts","webpack:///./src/distance/manhattanNommyde.ts","webpack:///./src/distance/pngQuant.ts","webpack:///./src/palette/index.ts","webpack:///./src/palette/neuquant/neuquant.ts","webpack:///./src/utils/palette.ts","webpack:///./src/utils/pointContainer.ts","webpack:///./src/utils/point.ts","webpack:///./src/palette/neuquant/neuquantFloat.ts","webpack:///./src/palette/rgbquant/rgbquant.ts","webpack:///./src/palette/rgbquant/colorHistogram.ts","webpack:///./src/utils/hueStatistics.ts","webpack:///./src/palette/wu/wuQuant.ts","webpack:///./src/image/index.ts","webpack:///./src/image/nearestColor.ts","webpack:///./src/image/array.ts","webpack:///./src/image/riemersma.ts","webpack:///./src/image/spaceFillingCurves/hilbertCurve.ts","webpack:///./src/quality/index.ts","webpack:///./src/quality/ssim.ts","webpack:///./src/utils/index.ts"],"names":[],"mappings":"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","file":"D:\\projects\\my\\github\\image-quantization/dist/iq.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"iq\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"iq\"] = factory();\n\telse\n\t\troot[\"iq\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap f7c531a9686cd33d674b\n **/","/**\r\n * @preserve\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * iq.ts - Image Quantization Library\r\n */\r\nimport * as constants from \"./constants\"\r\nimport * as conversion from \"./conversion\"\r\nimport * as distance from \"./distance\"\r\nimport * as palette from \"./palette\"\r\nimport * as image from \"./image\"\r\nimport * as quality from \"./quality\"\r\nimport * as utils from \"./utils\"\r\n\r\nexport {\r\n\tconstants,\r\n\tconversion,\r\n\tdistance,\r\n\tpalette,\r\n\timage,\r\n\tquality,\r\n\tutils\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/iq.ts\n **/","/**\r\n * @preserve\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * constants.ts - part of Image Quantization Library\r\n */\r\nimport * as bt709 from \"./bt709\"\r\n\r\nexport {\r\n\tbt709\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/constants/index.ts\n **/","/**\r\n * @preserve\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * constants.ts - part of Image Quantization Library\r\n */\r\n\r\n/**\r\n * sRGB (based on ITU-R Recommendation BT.709)\r\n * http://en.wikipedia.org/wiki/SRGB\r\n */\r\nenum Y {\r\n\tRED = .2126, GREEN = .7152, BLUE = .0722, WHITE = 1\r\n}\r\n\r\nenum x {\r\n\tRED = .6400, GREEN = .3000, BLUE = .1500, WHITE = .3127\r\n}\r\n\r\nenum y {\r\n\tRED = .3300, GREEN = .6000, BLUE = .0600, WHITE = .3290\r\n}\r\n\r\nexport {\r\n\tY,\r\n\tx,\r\n\ty\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/constants/bt709.ts\n **/","/**\r\n * @preserve\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * iq.ts - Image Quantization Library\r\n */\r\nimport {rgb2xyz} from \"./rgb2xyz\"\r\nimport {rgb2hsl} from \"./rgb2hsl\"\r\nimport {rgb2lab} from \"./rgb2lab\"\r\nimport {lab2xyz} from \"./lab2xyz\"\r\nimport {lab2rgb} from \"./lab2rgb\"\r\nimport {xyz2lab} from \"./xyz2lab\"\r\nimport {xyz2rgb} from \"./xyz2rgb\"\r\n\r\nexport {\r\n\trgb2xyz,\r\n\trgb2hsl,\r\n\trgb2lab,\r\n\tlab2xyz,\r\n\tlab2rgb,\r\n\txyz2lab,\r\n\txyz2rgb,\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/conversion/index.ts\n **/","/**\r\n * @preserve\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * rgb2xyz.ts - part of Image Quantization Library\r\n */\r\nexport function rgb2xyz(r : number, g : number, b : number) : { x : number; y : number; z : number } {\r\n\tr = r / 255;        //R from 0 to 255\r\n\tg = g / 255;        //G from 0 to 255\r\n\tb = b / 255;        //B from 0 to 255\r\n\r\n\t// gamma correction, see https://en.wikipedia.org/wiki/SRGB#The_reverse_transformation\r\n\tr = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\r\n\tg = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\r\n\tb = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\r\n\r\n\t// Observer. = 2°, Illuminant = D65\r\n\treturn {\r\n\t\tx : r * 0.4124 + g * 0.3576 + b * 0.1805,\r\n\t\ty : r * 0.2126 + g * 0.7152 + b * 0.0722,\r\n\t\tz : r * 0.0193 + g * 0.1192 + b * 0.9505\r\n\t}\r\n}\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/conversion/rgb2xyz.ts\n **/","/**\r\n * @preserve\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * rgb2hsl.ts - part of Image Quantization Library\r\n */\r\nimport {min3, max3} from \"../utils/arithmetic\"\r\n\r\n/**\r\n * Calculate HSL from RGB\r\n * Hue is in degrees [0..360]\r\n * Lightness: [0..1]\r\n * Saturation: [0..1]\r\n * http://web.archive.org/web/20060914040436/http://local.wasp.uwa.edu.au/~pbourke/colour/hsl/\r\n */\r\nexport function rgb2hsl(r : number, g : number, b : number) : {h : number; s : number; l : number} {\r\n\tvar min   = min3(r, g, b),\r\n\t\tmax   = max3(r, g, b),\r\n\t\tdelta = max - min,\r\n\t\tl     = (min + max) / 510,\r\n\t\ts     = 0;\r\n\r\n\tif (l > 0 && l < 1)\r\n\t\ts = delta / (l < 0.5 ? (max + min) : (510 - max - min));\r\n\r\n\tvar h = 0;\r\n\tif (delta > 0) {\r\n\t\tif (max === r) {\r\n\t\t\th = (g - b) / delta;\r\n\t\t} else if (max === g) {\r\n\t\t\th = (2 + (b - r) / delta);\r\n\t\t} else {\r\n\t\t\th = (4 + (r - g) / delta);\r\n\t\t}\r\n\r\n\t\th *= 60;\r\n\t\tif (h < 0) h += 360;\r\n\t}\r\n\treturn { h : h, s : s, l : l };\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/conversion/rgb2hsl.ts\n **/","export function degrees2radians(n : number) : number {\r\n\treturn n * (Math.PI / 180);\r\n}\r\n\r\nexport function max3(a : number, b : number, c : number) {\r\n\tvar m = a;\r\n\t(m < b) && (m = b);\r\n\t(m < c) && (m = c);\r\n\treturn m;\r\n}\r\n\r\nexport function min3(a : number, b : number, c : number) {\r\n\tvar m = a;\r\n\t(m > b) && (m = b);\r\n\t(m > c) && (m = c);\r\n\treturn m;\r\n}\r\n\r\nexport function intInRange(value : number, low : number, high : number) {\r\n\tif (value > high) value = high;\r\n\tif (value < low) value = low;\r\n\treturn value | 0;\r\n}\r\n\r\nexport function stableSort<T>(arrayToSort : T[], callback : (a : T, b : T) => number) : T[] {\r\n\tvar type = typeof arrayToSort[ 0 ],\r\n\t\tsorted : T[];\r\n\r\n\tif (type === \"number\" || type === \"string\") {\r\n\t\tvar ord = Object.create(null);\r\n\t\tfor (var i = 0, l = arrayToSort.length; i < l; i++) {\r\n\t\t\tvar val : string = <any>arrayToSort[ i ];\r\n\t\t\tif (ord[ val ] || ord[ val ] === 0) continue;\r\n\t\t\tord[ val ] = i;\r\n\t\t}\r\n\r\n\t\tsorted = arrayToSort.sort(function (a, b) {\r\n\t\t\treturn callback(a, b) || ord[ <any>a ] - ord[ <any>b ];\r\n\t\t});\r\n\t} else {\r\n\t\tvar ord2 : T[] = arrayToSort.slice(0);\r\n\t\tsorted         = arrayToSort.sort(function (a, b) {\r\n\t\t\treturn callback(a, b) || ord2.indexOf(a) - ord2.indexOf(b);\r\n\t\t});\r\n\t}\r\n\r\n\treturn sorted;\r\n}\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/utils/arithmetic.ts\n **/","/**\r\n * @preserve\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * rgb2lab.ts - part of Image Quantization Library\r\n */\r\nimport {rgb2xyz} from \"./rgb2xyz\"\r\nimport {xyz2lab} from \"./xyz2lab\"\r\n\r\nexport function rgb2lab(r : number, g : number, b : number) : { L : number; a : number; b: number } {\r\n\tvar xyz = rgb2xyz(r, g, b);\r\n\treturn xyz2lab(xyz.x, xyz.y, xyz.z);\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/conversion/rgb2lab.ts\n **/","/**\r\n * @preserve\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * xyz2lab.ts - part of Image Quantization Library\r\n */\r\nvar _refX : number = 0.95047, //ref_X =  95.047   Observer= 2°, Illuminant= D65\r\n\t_refY : number = 0.10000, //ref_Y = 100.000\r\n\t_refZ : number = 1.08883; //ref_Z = 108.883\r\n\r\nfunction _xyz2lab_helper(value : number) : number {\r\n\treturn value > 0.008856451679035631 ? Math.pow(value, 1 / 3) : ( 7.787037037037037 * value + 0.13793103448275862);\r\n}\r\n\r\nexport function xyz2lab(x : number, y : number, z : number) : {L : number; a : number; b : number} {\r\n\tx = x / _refX;          //ref_X =  95.047   Observer= 2°, Illuminant= D65\r\n\ty = y / _refY;          //ref_Y = 100.000\r\n\tz = z / _refZ;          //ref_Z = 108.883\r\n\r\n\tx = _xyz2lab_helper(x);\r\n\ty = _xyz2lab_helper(y);\r\n\tz = _xyz2lab_helper(z);\r\n\r\n\treturn {\r\n\t\tL : ( 116 * y ) - 16,\r\n\t\ta : 500 * ( x - y ),\r\n\t\tb : 200 * ( y - z )\r\n\t}\r\n}\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/conversion/xyz2lab.ts\n **/","/**\r\n * @preserve\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * lab2xyz.ts - part of Image Quantization Library\r\n */\r\n\r\nvar _refX : number = 0.95047, //ref_X =  95.047   Observer= 2°, Illuminant = D65\r\n\t_refY : number = 0.10000, //ref_Y = 100.000\r\n\t_refZ : number = 1.08883; //ref_Z = 108.883\r\n\r\nexport function lab2xyz(L : number, a : number, b : number) : {x : number; y : number; z : number} {\r\n\tvar y = ( L + 16 ) / 116, x = a / 500 + y, z = y - b / 200;\r\n\r\n\tvar y3 = Math.pow(y, 3), x3 = Math.pow(x, 3), z3 = Math.pow(z, 3);\r\n\r\n\ty = y3 > 0.008856 ? y3 : ( y - 16 / 116 ) / 7.787;\r\n\tx = x3 > 0.008856 ? x3 : ( x - 16 / 116 ) / 7.787;\r\n\tz = z3 > 0.008856 ? z3 : ( z - 16 / 116 ) / 7.787;\r\n\r\n\treturn {\r\n\t\tx : _refX * x,\r\n\t\ty : _refY * y,\r\n\t\tz : _refZ * z\r\n\t}\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/conversion/lab2xyz.ts\n **/","/**\r\n * @preserve\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * lab2rgb.ts - part of Image Quantization Library\r\n */\r\nimport {lab2xyz} from \"./lab2xyz\"\r\nimport {xyz2rgb} from \"./xyz2rgb\"\r\n\r\nexport function lab2rgb(L : number, a : number, b : number) : { r : number; g : number; b : number } {\r\n\tvar xyz = lab2xyz(L, a, b);\r\n\treturn xyz2rgb(xyz.x, xyz.y, xyz.z);\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/conversion/lab2rgb.ts\n **/","/**\r\n * @preserve\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * xyz2rgb.ts - part of Image Quantization Library\r\n */\r\nimport {intInRange} from \"../utils/arithmetic\"\r\n\r\nexport function xyz2rgb(x : number, y : number, z : number) : { r : number; g : number; b : number } {\r\n\t// Observer. = 2°, Illuminant = D65\r\n\tvar r = x * 3.2406 + y * -1.5372 + z * -0.4986,\r\n\t\tg = x * -0.9689 + y * 1.8758 + z * 0.0415,\r\n\t\tb = x * 0.0557 + y * -0.2040 + z * 1.0570;\r\n\r\n\t// gamma correction, see https://en.wikipedia.org/wiki/SRGB#The_reverse_transformation\r\n\tr = r > 0.0031308 ? 1.055 * Math.pow(r, 1 / 2.4) - 0.055 : 12.92 * r;\r\n\tg = g > 0.0031308 ? 1.055 * Math.pow(g, 1 / 2.4) - 0.055 : 12.92 * g;\r\n\tb = b > 0.0031308 ? 1.055 * Math.pow(b, 1 / 2.4) - 0.055 : 12.92 * b;\r\n\r\n\treturn {\r\n\t\tr : intInRange(r * 255, 0, 255),\r\n\t\tg : intInRange(g * 255, 0, 255),\r\n\t\tb : intInRange(b * 255, 0, 255)\r\n\t}\r\n}\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/conversion/xyz2rgb.ts\n **/","/**\r\n * @preserve\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * iq.ts - Image Quantization Library\r\n */\r\nimport {IDistanceCalculator} from \"./common\"\r\nimport {CIE94} from \"./cie94\"\r\nimport {CIEDE2000} from \"./ciede2000\"\r\nimport {CMETRIC} from \"./cmetric\"\r\nimport {Euclidean} from \"./euclidean\"\r\nimport {EuclideanRgbQuantWithAlpha} from \"./euclideanRgbQuantWithAlpha\"\r\nimport {EuclideanRgbQuantWOAlpha} from \"./euclideanRgbQuantWOAlpha\"\r\nimport {Manhattan} from \"./manhattan\"\r\nimport {ManhattanSRGB} from \"./manhattanSRGB\"\r\nimport {ManhattanNommyde} from \"./manhattanNommyde\"\r\nimport {PNGQUANT} from \"./pngQuant\"\r\n\r\nexport {\r\n\tIDistanceCalculator,\r\n\tCIE94,\r\n\tCIEDE2000,\r\n\tCMETRIC,\r\n\tEuclidean,\r\n\tEuclideanRgbQuantWithAlpha,\r\n\tEuclideanRgbQuantWOAlpha,\r\n\tManhattan,\r\n\tManhattanSRGB,\r\n\tManhattanNommyde,\r\n\tPNGQUANT\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/distance/index.ts\n **/","/**\r\n * @preserve\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * cie94.ts - part of Image Quantization Library\r\n */\r\nimport {IDistanceCalculator} from \"./common\"\r\nimport {Point} from \"../utils/point\"\r\nimport {rgb2lab} from \"../conversion/rgb2lab\"\r\n\r\n/**\r\n * Computes CIE94 distance between 2 colors in LAB space.\r\n *\r\n * p1 = [l1, a1, b1]\r\n * p2 = [l2, a2, b2]\r\n * Returns distance:float\r\n *\r\n * Usage example:\r\n *     var d = CIE94_dist([94.0, -0.1, -0.55], [77.0, 0.5, 0.45])\r\n *\r\n * Iulius Curt, april 2013\r\n */\r\nexport class CIE94 implements IDistanceCalculator {\r\n\tprivate static _Kl = 2.0;\r\n\tprivate static _K1 = 0.048;\r\n\tprivate static _K2 = 0.014;\r\n\r\n\tprivate _whitePoint : {r : number; g : number; b : number; a : number};\r\n\tprivate _maxCIE94Distance : number;\r\n\r\n\tconstructor() {\r\n\t\t// set default maximal color component deltas (255 - 0 = 255)\r\n\t\tthis.setWhitePoint(255, 255, 255, 255);\r\n\t}\r\n\r\n\tsetWhitePoint(r : number, g : number, b : number, a : number) : void {\r\n\t\tthis._whitePoint       = { r : r, g : g, b : b, a : a };\r\n\t\tthis._maxCIE94Distance = 200;\r\n\t}\r\n\r\n\tcalculateRaw(r1 : number, g1 : number, b1 : number, a1 : number, r2 : number, g2 : number, b2 : number, a2 : number) : number {\r\n\t\tvar lab1 = rgb2lab(r1 / this._whitePoint.r, g1 / this._whitePoint.g, b1 / this._whitePoint.b),\r\n\t\t\tlab2 = rgb2lab(r2 / this._whitePoint.r, g2 / this._whitePoint.g, b2 / this._whitePoint.b);\r\n\r\n\t\tvar dL     = lab1.L - lab2.L,\r\n\t\t\tdA     = lab1.a - lab2.a,\r\n\t\t\tdB     = lab1.b - lab2.b,\r\n\t\t\tc1     = Math.sqrt(lab1.a * lab1.a + lab1.b * lab1.b),\r\n\t\t\tc2     = Math.sqrt(lab2.a * lab2.a + lab2.b * lab2.b),\r\n\t\t\tdC     = c1 - c2,\r\n\t\t\tdeltaH = dA * dA + dB * dB - dC * dC;\r\n\r\n\t\tdeltaH = deltaH < 0 ? 0 : Math.sqrt(deltaH);\r\n\r\n\t\tvar i = Math.pow(dL / CIE94._Kl, 2) + Math.pow(dC / (1.0 + CIE94._K1 * c1), 2) + Math.pow(deltaH / (1.0 + CIE94._K2 * c1), 2);\r\n\t\treturn i < 0 ? 0 : i;\r\n\t}\r\n\r\n\tcalculateNormalized(colorA : Point, colorB : Point) : number {\r\n\t\treturn Math.sqrt(this.calculateRaw(colorA.r, colorA.g, colorA.b, colorA.a, colorB.r, colorB.g, colorB.b, colorB.a)) / this._maxCIE94Distance;\r\n\t}\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/distance/cie94.ts\n **/","/**\r\n * @preserve\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * ciede2000.ts - part of Image Quantization Library\r\n */\r\nimport {IDistanceCalculator} from \"./common\"\r\nimport {Point} from \"../utils/point\"\r\nimport {rgb2lab} from \"../conversion/rgb2lab\"\r\nimport {degrees2radians} from \"../utils/arithmetic\"\r\n\r\n\t/**\r\n\t * CIEDE2000 algorithm (optimized)\r\n\t *\r\n\t */\r\n\texport class CIEDE2000 implements IDistanceCalculator {\r\n\t\tprivate static _kL : number = 1;\r\n\t\tprivate static _kC : number = 1;\r\n\t\tprivate static _kH : number = 1;\r\n\t\tprivate static _pow25to7 : number = Math.pow(25, 7);\r\n\t\tprivate static _deg360InRad : number = degrees2radians(360);\r\n\t\tprivate static _deg180InRad : number = degrees2radians(180);\r\n\t\tprivate static _deg30InRad : number = degrees2radians(30);\r\n\t\tprivate static _deg6InRad : number = degrees2radians(6);\r\n\t\tprivate static _deg63InRad : number = degrees2radians(63);\r\n\r\n\t\tprivate _whitePoint : {r : number; g : number; b : number; a : number};\r\n\r\n\t\tconstructor() {\r\n\t\t\tthis.setWhitePoint(255, 255, 255, 255);\r\n\t\t}\r\n\r\n\t\tsetWhitePoint(r : number, g : number, b : number, a : number) : void {\r\n\t\t\tthis._whitePoint = {r : r, g : g, b : b, a : a};\r\n\t\t}\r\n\r\n\t\tcalculateRaw(r1 : number, g1 : number, b1 : number, a1 : number, r2 : number, g2 : number, b2 : number, a2 : number) : number {\r\n\t\t\tvar lab1 = rgb2lab(r1 / this._whitePoint.r, g1 / this._whitePoint.g, b1 / this._whitePoint.b),\r\n\t\t\t\tlab2 = rgb2lab(r2 / this._whitePoint.r, g2 / this._whitePoint.g, b2 / this._whitePoint.b),\r\n\t\t\t\tdA = (a2 - a1) / this._whitePoint.a;\r\n\r\n\t\t\tvar dE = this.calculateRawInLab(lab1, lab2);\r\n\t\t\treturn dE + dA * dA;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @description\r\n\t\t *   minDistance between any color (CIEDE2000 low limit) = 0.00021155740497634713 (Chrome 46, JavaScript)\r\n\t\t *   !!!!!! max (RT * (dCp / (SC * CIEDE2000._kC)) * (dHp / (SH * CIEDE2000._kH))) 0.0000019135101965161994\r\n\t\t *   max (abs(dE (correct RT) - dE (RT = 0) ) ) is always less than minDistance (0.0000019135101965161994)\r\n\t\t *\r\n\t\t *   So, we can remove RT from equation.\r\n\t\t */\r\n\t\tcalculateRawInLab(Lab1 : {L : number; a : number; b : number}, Lab2 : {L : number; a : number; b : number}) : number {\r\n\t\t\t// Get L,a,b values for color 1\r\n\t\t\tvar L1 = Lab1.L,\r\n\t\t\t\ta1 = Lab1.a,\r\n\t\t\t\tb1 = Lab1.b;\r\n\r\n\t\t\t// Get L,a,b values for color 2\r\n\t\t\tvar L2 = Lab2.L,\r\n\t\t\t\ta2 = Lab2.a,\r\n\t\t\t\tb2 = Lab2.b;\r\n\r\n\t\t\t// Weight factors\r\n\t\t\t/**\r\n\t\t\t * Step 1: Calculate C1p, C2p, h1p, h2p\r\n\t\t\t */\r\n\t\t\tvar C1 = Math.sqrt(a1 * a1 + b1 * b1), //(2)\r\n\t\t\t\tC2 = Math.sqrt(a2 * a2 + b2 * b2), //(2)\r\n\r\n\t\t\t\tpow_a_C1_C2_to_7 = Math.pow((C1 + C2) / 2.0, 7.0),             //(3)\r\n\r\n\t\t\t\tG = 0.5 * (1 - Math.sqrt(pow_a_C1_C2_to_7 / (pow_a_C1_C2_to_7 + CIEDE2000._pow25to7))), //(4)\r\n\r\n\t\t\t\ta1p = (1.0 + G) * a1, //(5)\r\n\t\t\t\ta2p = (1.0 + G) * a2, //(5)\r\n\r\n\t\t\t\tC1p = Math.sqrt(a1p * a1p + b1 * b1), //(6)\r\n\t\t\t\tC2p = Math.sqrt(a2p * a2p + b2 * b2), //(6)\r\n\r\n\t\t\t\th1p = this._hp_f(b1, a1p), //(7)\r\n\t\t\t\th2p = this._hp_f(b2, a2p); //(7)\r\n\r\n\t\t\t/**\r\n\t\t\t * Step 2: Calculate dLp, dCp, dHp\r\n\t\t\t */\r\n\t\t\tvar dLp = L2 - L1, //(8)\r\n\t\t\t\tdCp = C2p - C1p, //(9)\r\n\r\n\t\t\t\tdhp = this._dhp_f(C1, C2, h1p, h2p), //(10)\r\n\t\t\t\tdHp = 2 * Math.sqrt(C1p * C2p) * Math.sin(dhp / 2.0); //(11)\r\n\r\n\t\t\t/**\r\n\t\t\t * Step 3: Calculate CIEDE2000 Color-Difference\r\n\t\t\t */\r\n\t\t\tvar a_L = (L1 + L2) / 2.0, //(12)\r\n\t\t\t\ta_Cp = (C1p + C2p) / 2.0, //(13)\r\n\r\n\t\t\t\ta_hp = this._a_hp_f(C1, C2, h1p, h2p), //(14)\r\n\r\n\t\t\t\tT = 1 - 0.17 * Math.cos(a_hp - CIEDE2000._deg30InRad) +\r\n\t\t\t\t\t0.24 * Math.cos(2 * a_hp) +\r\n\t\t\t\t\t0.32 * Math.cos(3 * a_hp + CIEDE2000._deg6InRad) -\r\n\t\t\t\t\t0.20 * Math.cos(4 * a_hp - CIEDE2000._deg63InRad), //(15)\r\n\r\n\t\t\t\tpow_a_L_minus_50_to_2 = Math.pow(a_L - 50, 2),\r\n\t\t\t\tSL = 1 + (0.015 * pow_a_L_minus_50_to_2) / Math.sqrt(20 + pow_a_L_minus_50_to_2),//(18)\r\n\t\t\t\tSC = 1 + 0.045 * a_Cp,//(19)\r\n\t\t\t\tSH = 1 + 0.015 * a_Cp * T,//(20)\r\n\t\t\t\tdE = Math.sqrt(Math.pow(dLp / (SL * CIEDE2000._kL), 2) + Math.pow(dCp / (SC * CIEDE2000._kC), 2) + Math.pow(dHp / (SH * CIEDE2000._kH), 2)); //(22)\r\n\r\n\t\t\treturn dE * dE;\r\n\t\t}\r\n\r\n\t\tcalculateNormalized(colorA : Point, colorB : Point) : number {\r\n\t\t\treturn Math.sqrt(this.calculateRaw(colorA.r, colorA.g, colorA.b, colorA.a, colorB.r, colorB.g, colorB.b, colorB.a));\r\n\t\t}\r\n\r\n\t\tprivate _hp_f(b : number, aPrime : number) { //(7)\r\n\t\t\tif (b === 0 && aPrime === 0) {\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\r\n\t\t\tvar hPrime = Math.atan2(b, aPrime);\r\n\t\t\tif (hPrime >= 0) {\r\n\t\t\t\treturn hPrime;\r\n\t\t\t}\r\n\r\n\t\t\treturn hPrime + CIEDE2000._deg360InRad;\r\n\t\t}\r\n\r\n\t\tprivate _a_hp_f(C1 : number, C2 : number, h1p : number, h2p : number) : number { //(14)\r\n\t\t\tvar hPrimeSum = h1p + h2p;\r\n\t\t\tvar h1p_minus_h2p = h1p - h2p;\r\n\t\t\tif (C1 * C2 === 0) {\r\n\t\t\t\treturn hPrimeSum;\r\n\t\t\t}\r\n\r\n\t\t\tif (h1p_minus_h2p >= -CIEDE2000._deg180InRad && h1p_minus_h2p <= CIEDE2000._deg180InRad) {\r\n\t\t\t\treturn hPrimeSum / 2.0;\r\n\t\t\t}\r\n\r\n\t\t\tif (hPrimeSum < CIEDE2000._deg360InRad) {\r\n\t\t\t\treturn (hPrimeSum + CIEDE2000._deg360InRad) / 2.0;\r\n\t\t\t}\r\n\r\n\t\t\treturn (hPrimeSum - CIEDE2000._deg360InRad) / 2.0;\r\n\t\t}\r\n\r\n\t\tprivate _dhp_f(C1 : number, C2 : number, h1p : number, h2p : number) : number { //(10)\r\n\t\t\tif (C1 * C2 === 0) {\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\r\n\t\t\tvar h2p_minus_h1p = h2p - h1p;\r\n\r\n\t\t\tif (h2p_minus_h1p < -CIEDE2000._deg180InRad) {\r\n\t\t\t\treturn h2p_minus_h1p + CIEDE2000._deg360InRad;\r\n\t\t\t}\r\n\r\n\t\t\tif (h2p_minus_h1p > CIEDE2000._deg180InRad) {\r\n\t\t\t\treturn h2p_minus_h1p - CIEDE2000._deg360InRad;\r\n\t\t\t}\r\n\r\n\t\t\treturn h2p_minus_h1p;\r\n\t\t}\r\n\t}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/distance/ciede2000.ts\n **/","/**\r\n * @preserve\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * cmetric.ts - part of Image Quantization Library\r\n */\r\nimport {IDistanceCalculator} from \"./common\"\r\nimport {Point} from \"../utils/point\"\r\n\r\n/**\r\n * TODO: Name it: http://www.compuphase.com/cmetric.htm\r\n */\r\nexport class CMETRIC implements IDistanceCalculator {\r\n\tprivate _rCoefficient : number;\r\n\tprivate _gCoefficient : number;\r\n\tprivate _bCoefficient : number;\r\n\tprivate _aCoefficient : number;\r\n\tprivate _maxDistance : number;\r\n\r\n\tconstructor() {\r\n\t\tthis.setWhitePoint(255, 255, 255, 255);\r\n\t}\r\n\r\n\tsetWhitePoint(r : number, g : number, b : number, a : number) : void {\r\n\t\tthis._rCoefficient = 255 / r;\r\n\t\tthis._gCoefficient = 255 / g;\r\n\t\tthis._bCoefficient = 255 / b;\r\n\t\tthis._aCoefficient = 255 / a;\r\n\t\tthis._maxDistance  = Math.sqrt(this.calculateRaw(0, 0, 0, 0, r, g, b, a));\r\n\t}\r\n\r\n\tcalculateRaw(r1 : number, g1 : number, b1 : number, a1 : number, r2 : number, g2 : number, b2 : number, a2 : number) : number {\r\n\t\tvar rmean = ( r1 + r2 ) / 2 * this._rCoefficient,\r\n\t\t\tr     = (r1 - r2) * this._rCoefficient,\r\n\t\t\tg     = (g1 - g2) * this._gCoefficient,\r\n\t\t\tb     = (b1 - b2) * this._bCoefficient,\r\n\t\t\tdE    = ((((512 + rmean) * r * r) >> 8) + 4 * g * g + (((767 - rmean) * b * b) >> 8)),\r\n\t\t\tdA    = (a2 - a1) * this._aCoefficient;\r\n\r\n\t\treturn (dE + dA * dA);\r\n\t}\r\n\r\n\tcalculateNormalized(colorA : Point, colorB : Point) : number {\r\n\t\treturn Math.sqrt(this.calculateRaw(colorA.r, colorA.g, colorA.b, colorA.a, colorB.r, colorB.g, colorB.b, colorB.a)) / this._maxDistance;\r\n\t}\r\n\r\n}\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/distance/cmetric.ts\n **/","/**\r\n * @preserve\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * euclidean.ts - part of Image Quantization Library\r\n */\r\nimport {IDistanceCalculator} from \"./common\"\r\nimport {Point} from \"../utils/point\"\r\n\r\n/**\r\n * Euclidean color distance\r\n */\r\nexport class Euclidean implements IDistanceCalculator {\r\n\tprotected _Pr : number;\r\n\tprotected _Pg : number;\r\n\tprotected _Pb : number;\r\n\tprotected _Pa : number;\r\n\r\n\tprotected _maxEuclideanDistance : number;\r\n\r\n\tconstructor() {\r\n\t\tthis._setDefaults();\r\n\r\n\t\t// set default maximal color component deltas (255 - 0 = 255)\r\n\t\tthis.setWhitePoint(255, 255, 255, 255);\r\n\t}\r\n\r\n\t/**\r\n\t * To simulate original RgbQuant distance use `r=255,g=255,b=255,a=0`\r\n\t */\r\n\tsetWhitePoint(r : number, g : number, b : number, a : number) : void {\r\n\t\tthis._maxEuclideanDistance = Math.sqrt(this.calculateRaw(r, g, b, a, 0, 0, 0, 0));\r\n\t}\r\n\r\n\tcalculateRaw(r1 : number, g1 : number, b1 : number, a1 : number, r2 : number, g2 : number, b2 : number, a2 : number) : number {\r\n\t\tvar dR = r2 - r1, dG = g2 - g1, dB = b2 - b1, dA = a2 - a1;\r\n\t\treturn this._Pr * dR * dR + this._Pg * dG * dG + this._Pb * dB * dB + this._Pa * dA * dA;\r\n\t}\r\n\r\n\tcalculateNormalized(colorA : Point, colorB : Point) : number {\r\n\t\treturn Math.sqrt(this.calculateRaw(colorA.r, colorA.g, colorA.b, colorA.a, colorB.r, colorB.g, colorB.b, colorB.a)) / this._maxEuclideanDistance;\r\n\t}\r\n\r\n\tprotected _setDefaults() : void {\r\n\t\tthis._Pr = this._Pg = this._Pb = this._Pa = 1;\r\n\t}\r\n}\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/distance/euclidean.ts\n **/","/**\r\n * @preserve\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * euclideanRgbQuantWithAlpha.ts - part of Image Quantization Library\r\n */\r\nimport {IDistanceCalculator} from \"./common\"\r\nimport {Euclidean} from \"./euclidean\"\r\nimport * as bt709 from \"../constants/bt709\"\r\n\r\n/**\r\n * Euclidean color distance (RgbQuant modification w Alpha)\r\n */\r\nexport class EuclideanRgbQuantWithAlpha extends Euclidean implements IDistanceCalculator {\r\n\tprotected _setDefaults() : void {\r\n\t\tthis._Pr = bt709.Y.RED;\r\n\t\tthis._Pg = bt709.Y.GREEN;\r\n\t\tthis._Pb = bt709.Y.BLUE;\r\n\r\n\t\t// TODO: what is the best coefficient below?\r\n\t\tthis._Pa = 1;\r\n\t}\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/distance/euclideanRgbQuantWithAlpha.ts\n **/","/**\r\n * @preserve\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * euclideanRgbQuantWOAlpha.ts - part of Image Quantization Library\r\n */\r\nimport {IDistanceCalculator} from \"./common\"\r\nimport {Euclidean} from \"./euclidean\"\r\nimport * as bt709 from \"../constants/bt709\"\r\n\r\n/**\r\n * Euclidean color distance (RgbQuant modification w/o Alpha)\r\n */\r\nexport class EuclideanRgbQuantWOAlpha extends Euclidean implements IDistanceCalculator {\r\n\tprotected _setDefaults() : void {\r\n\t\tthis._Pr = bt709.Y.RED;\r\n\t\tthis._Pg = bt709.Y.GREEN;\r\n\t\tthis._Pb = bt709.Y.BLUE;\r\n\t\tthis._Pa = 0;\r\n\t}\r\n}\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/distance/euclideanRgbQuantWOAlpha.ts\n **/","/**\r\n * @preserve\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * manhattanNeuQuant.ts - part of Image Quantization Library\r\n */\r\nimport {IDistanceCalculator} from \"./common\"\r\nimport {Point} from \"../utils/point\"\r\n\r\n/**\r\n * Manhattan distance (NeuQuant modification) - w/o sRGB coefficients\r\n */\r\nexport class Manhattan implements IDistanceCalculator {\r\n\tprotected _Pr : number;\r\n\tprotected _Pg : number;\r\n\tprotected _Pb : number;\r\n\tprotected _Pa : number;\r\n\r\n\tprotected _maxManhattanDistance : number;\r\n\r\n\tconstructor() {\r\n\t\tthis._setDefaults();\r\n\r\n\t\t// set default maximal color component deltas (255 - 0 = 255)\r\n\t\tthis.setWhitePoint(255, 255, 255, 255);\r\n\t}\r\n\r\n\tsetWhitePoint(r : number, g : number, b : number, a : number) : void {\r\n\t\tthis._maxManhattanDistance = this.calculateRaw(r, g, b, a, 0, 0, 0, 0);\r\n\t}\r\n\r\n\tcalculateNormalized(colorA : Point, colorB : Point) : number {\r\n\t\treturn this.calculateRaw(colorA.r, colorA.g, colorA.b, colorA.a, colorB.r, colorB.g, colorB.b, colorB.a) / this._maxManhattanDistance;\r\n\t}\r\n\r\n\tcalculateRaw(r1 : number, g1 : number, b1 : number, a1 : number, r2 : number, g2 : number, b2 : number, a2 : number) : number {\r\n\t\tvar dR = r2 - r1, dG = g2 - g1, dB = b2 - b1, dA = a2 - a1;\r\n\t\tif (dR < 0) dR = 0 - dR;\r\n\t\tif (dG < 0) dG = 0 - dG;\r\n\t\tif (dB < 0) dB = 0 - dB;\r\n\t\tif (dA < 0) dA = 0 - dA;\r\n\r\n\t\treturn this._Pr * dR + this._Pg * dG + this._Pb * dB + this._Pa * dA;\r\n\t}\r\n\r\n\tprotected _setDefaults() : void {\r\n\t\tthis._Pr = this._Pg = this._Pb = this._Pa = 1;\r\n\t}\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/distance/manhattan.ts\n **/","/**\r\n * @preserve\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * manhattanSRGB.ts - part of Image Quantization Library\r\n */\r\nimport {IDistanceCalculator} from \"./common\"\r\nimport {Manhattan} from \"./manhattan\"\r\nimport * as bt709 from \"../constants/bt709\"\r\n\r\n/**\r\n * Manhattan distance\r\n */\r\nexport class ManhattanSRGB extends Manhattan implements IDistanceCalculator {\r\n\tprotected _setDefaults() : void {\r\n\t\tthis._Pr = bt709.Y.RED;\r\n\t\tthis._Pg = bt709.Y.GREEN;\r\n\t\tthis._Pb = bt709.Y.BLUE;\r\n\r\n\t\t// TODO: what is the best coef below?\r\n\t\tthis._Pa = 1;\r\n\t}\r\n}\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/distance/manhattanSRGB.ts\n **/","/**\r\n * @preserve\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * manhattanSRGB.ts - part of Image Quantization Library\r\n */\r\nimport {IDistanceCalculator} from \"./common\"\r\nimport {Manhattan} from \"./manhattan\"\r\n\r\n/**\r\n * Manhattan distance\r\n */\r\nexport class ManhattanNommyde extends Manhattan implements IDistanceCalculator {\r\n\tprotected _setDefaults() : void {\r\n\t\tthis._Pr = 0.4984;\r\n\t\tthis._Pg = 0.8625;\r\n\t\tthis._Pb = 0.2979;\r\n\r\n\t\t// TODO: what is the best coef below?\r\n\t\tthis._Pa = 1;\r\n\t}\r\n}\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/distance/manhattanNommyde.ts\n **/","/**\r\n * @preserve\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * pngQuant.ts - part of Image Quantization Library\r\n */\r\nimport {IDistanceCalculator} from \"./common\"\r\nimport {Point} from \"../utils/point\"\r\n\r\n/**\r\n * TODO: check quality of this distance equation\r\n * TODO: ask author for usage rights\r\n * taken from:\r\n * {@link http://stackoverflow.com/questions/4754506/color-similarity-distance-in-rgba-color-space/8796867#8796867}\r\n * {@link https://github.com/pornel/pngquant/blob/cc39b47799a7ff2ef17b529f9415ff6e6b213b8f/lib/pam.h#L148}\r\n */\r\nexport class PNGQUANT implements IDistanceCalculator {\r\n\r\n\tprivate _whitePoint : {r : number; g : number; b : number; a : number};\r\n\tprivate _maxDistance : number;\r\n\r\n\tconstructor() {\r\n\t\tthis.setWhitePoint(255, 255, 255, 255);\r\n\t}\r\n\r\n\tsetWhitePoint(r : number, g : number, b : number, a : number) : void {\r\n\t\tthis._whitePoint  = { r : r, g : g, b : b, a : a };\r\n\t\tthis._maxDistance = this.calculateRaw(0, 0, 0, 0, r, g, b, a);\r\n\t}\r\n\r\n\tcalculateNormalized(colorA : Point, colorB : Point) : number {\r\n\t\treturn this.calculateRaw(colorA.r, colorA.g, colorA.b, colorA.a, colorB.r, colorB.g, colorB.b, colorB.a) / this._maxDistance;\r\n\t}\r\n\r\n\tcalculateRaw(r1 : number, g1 : number, b1 : number, a1 : number, r2 : number, g2 : number, b2 : number, a2 : number) : number {\r\n\t\t// px_b.rgb = px.rgb + 0*(1-px.a) // blend px on black\r\n\t\t// px_b.a   = px.a   + 1*(1-px.a)\r\n\t\t// px_w.rgb = px.rgb + 1*(1-px.a) // blend px on white\r\n\t\t// px_w.a   = px.a   + 1*(1-px.a)\r\n\r\n\t\t// px_b.rgb = px.rgb              // difference same as in opaque RGB\r\n\t\t// px_b.a   = 1\r\n\t\t// px_w.rgb = px.rgb - px.a       // difference simplifies to formula below\r\n\t\t// px_w.a   = 1\r\n\r\n\t\t// (px.rgb - px.a) - (py.rgb - py.a)\r\n\t\t// (px.rgb - py.rgb) + (py.a - px.a)\r\n\r\n\t\tvar alphas = (a2 - a1) / this._whitePoint.a;\r\n\t\treturn this._colordifference_ch(r1 / this._whitePoint.r, r2 / this._whitePoint.r, alphas) +\r\n\t\t\tthis._colordifference_ch(g1 / this._whitePoint.g, g2 / this._whitePoint.g, alphas) +\r\n\t\t\tthis._colordifference_ch(b1 / this._whitePoint.b, b2 / this._whitePoint.b, alphas);\r\n\t}\r\n\r\n\tprivate _colordifference_ch(x : number, y : number, alphas : number) {\r\n\t\t// maximum of channel blended on white, and blended on black\r\n\t\t// premultiplied alpha and backgrounds 0/1 shorten the formula\r\n\t\tvar black = x - y,\r\n\t\t\twhite = black + alphas;\r\n\r\n\t\treturn black * black + white * white;\r\n\t}\r\n}\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/distance/pngQuant.ts\n **/","/**\r\n * @preserve\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * iq.ts - Image Quantization Library\r\n */\r\nimport {IPaletteQuantizer} from \"./common\"\r\nimport {NeuQuant} from \"./neuquant/neuquant\"\r\nimport {NeuQuantFloat} from \"./neuquant/neuquantFloat\"\r\nimport {RGBQuant} from \"./rgbquant/rgbquant\"\r\nimport {ColorHistogram} from \"./rgbquant/colorHistogram\"\r\nimport {WuQuant, WuColorCube} from \"./wu/wuQuant\"\r\n\r\nexport {\r\n\tIPaletteQuantizer,\r\n\r\n\tNeuQuant,\r\n\tNeuQuantFloat,\r\n\tRGBQuant,\r\n\tWuQuant,\r\n\r\n\tColorHistogram,\r\n\tWuColorCube\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/palette/index.ts\n **/","/*\r\n * NeuQuant Neural-Net Quantization Algorithm\r\n * ------------------------------------------\r\n *\r\n * Copyright (c) 1994 Anthony Dekker\r\n *\r\n * NEUQUANT Neural-Net quantization algorithm by Anthony Dekker, 1994. See\r\n * \"Kohonen neural networks for optimal colour quantization\" in \"Network:\r\n * Computation in Neural Systems\" Vol. 5 (1994) pp 351-367. for a discussion of\r\n * the algorithm.\r\n *\r\n * Any party obtaining a copy of these files from the author, directly or\r\n * indirectly, is granted, free of charge, a full and unrestricted irrevocable,\r\n * world-wide, paid up, royalty-free, nonexclusive right and license to deal in\r\n * this software and documentation files (the \"Software\"), including without\r\n * limitation the rights to use, copy, modify, merge, publish, distribute,\r\n * sublicense, and/or sell copies of the Software, and to permit persons who\r\n * receive copies from any such party to do so, with the only requirement being\r\n * that this copyright notice remain intact.\r\n */\r\n\r\n/**\r\n * @preserve TypeScript port:\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * neuquant.ts - part of Image Quantization Library\r\n */\r\n\r\nimport {Palette} from \"../../utils/palette\"\r\nimport {Point} from \"../../utils/point\"\r\nimport {PointContainer} from \"../../utils/pointContainer\"\r\nimport {IDistanceCalculator} from \"../../distance/common\"\r\nimport {IPaletteQuantizer} from \"../common\"\r\n\r\n// bias for colour values\r\nvar networkBiasShift = 3;\r\n\r\nclass Neuron {\r\n\tr : number;\r\n\tg : number;\r\n\tb : number;\r\n\ta : number;\r\n\r\n\tconstructor(defaultValue : number) {\r\n\t\tthis.r = this.g = this.b = this.a = defaultValue;\r\n\t}\r\n\r\n\t/**\r\n\t * There is a fix in original NEUQUANT by Anthony Dekker (http://members.ozemail.com.au/~dekker/NEUQUANT.HTML)\r\n\t * @example\r\n\t * r = Math.min(255, (neuron.r + (1 << (networkBiasShift - 1))) >> networkBiasShift);\r\n\t */\r\n\ttoPoint() : Point {\r\n\t\treturn Point.createByRGBA(this.r >> networkBiasShift, this.g >> networkBiasShift, this.b >> networkBiasShift, this.a >> networkBiasShift);\r\n\t}\r\n\r\n\tsubtract(r : number, g : number, b : number, a : number) : void {\r\n\t\tthis.r -= r | 0;\r\n\t\tthis.g -= g | 0;\r\n\t\tthis.b -= b | 0;\r\n\t\tthis.a -= a | 0;\r\n\t}\r\n\r\n\t/*\r\n\t public subtract(r : number, g : number, b : number, a : number) : void {\r\n\t this.r = (-r + this.r) | 0;\r\n\t this.g = (-g + this.g) | 0;\r\n\t this.b = (-b + this.b) | 0;\r\n\t this.a = (-a + this.a) | 0;\r\n\r\n\t this.r -= r;\r\n\t this.g -= g;\r\n\t this.b -= b;\r\n\t this.a -= a;\r\n\r\n\t this.r -= r | 0;\r\n\t this.g -= g | 0;\r\n\t this.b -= b | 0;\r\n\t this.a -= a | 0;\r\n\t }\r\n\t */\r\n}\r\n\r\nexport class NeuQuant implements IPaletteQuantizer {\r\n\t/*\r\n\t four primes near 500 - assume no image has a length so large\r\n\t that it is divisible by all four primes\r\n\t */\r\n\tprivate static _prime1 : number          = 499;\r\n\tprivate static _prime2 : number          = 491;\r\n\tprivate static _prime3 : number          = 487;\r\n\tprivate static _prime4 : number          = 503;\r\n\tprivate static _minpicturebytes : number = NeuQuant._prime4;\r\n\r\n\t// no. of learning cycles\r\n\tprivate static _nCycles : number = 100;\r\n\r\n\t// defs for freq and bias\r\n\tprivate static _initialBiasShift : number = 16;\r\n\r\n\t// bias for fractions\r\n\tprivate static _initialBias : number = (1 << NeuQuant._initialBiasShift);\r\n\tprivate static _gammaShift : number  = 10;\r\n\r\n\t// gamma = 1024\r\n\t// TODO: why gamma is never used?\r\n\t//private static _gamma : number     = (1 << NeuQuant._gammaShift);\r\n\tprivate static _betaShift : number = 10;\r\n\tprivate static _beta : number      = (NeuQuant._initialBias >> NeuQuant._betaShift);\r\n\r\n\t// beta = 1/1024\r\n\tprivate static _betaGamma : number = (NeuQuant._initialBias << (NeuQuant._gammaShift - NeuQuant._betaShift));\r\n\r\n\t/*\r\n\t * for 256 cols, radius starts\r\n\t */\r\n\tprivate static _radiusBiasShift : number = 6;\r\n\r\n\t// at 32.0 biased by 6 bits\r\n\tprivate static _radiusBias : number = 1 << NeuQuant._radiusBiasShift;\r\n\r\n\t// and decreases by a factor of 1/30 each cycle\r\n\tprivate static _radiusDecrease : number = 30;\r\n\r\n\t/* defs for decreasing alpha factor */\r\n\r\n\t// alpha starts at 1.0\r\n\tprivate static _alphaBiasShift : number = 10;\r\n\r\n\t// biased by 10 bits\r\n\tprivate static _initAlpha : number = (1 << NeuQuant._alphaBiasShift);\r\n\r\n\t/* radBias and alphaRadBias used for radpower calculation */\r\n\tprivate static _radBiasShift : number      = 8;\r\n\tprivate static _radBias : number           = 1 << NeuQuant._radBiasShift;\r\n\tprivate static _alphaRadBiasShift : number = NeuQuant._alphaBiasShift + NeuQuant._radBiasShift;\r\n\tprivate static _alphaRadBias : number      = 1 << NeuQuant._alphaRadBiasShift;\r\n\r\n\tprivate _pointArray : Point[];\r\n\tprivate _networkSize : number;\r\n\tprivate _network : Neuron[];\r\n\r\n\t/** sampling factor 1..30 */\r\n\tprivate _sampleFactor : number;\r\n\tprivate _radPower : number[];\r\n\r\n\t// bias and freq arrays for learning\r\n\tprivate _freq : number[];\r\n\r\n\t/* for network lookup - really 256 */\r\n\tprivate _bias : number[];\r\n\tprivate _distance : IDistanceCalculator;\r\n\r\n\tconstructor(colorDistanceCalculator : IDistanceCalculator, colors : number = 256) {\r\n\t\tthis._distance     = colorDistanceCalculator;\r\n\t\tthis._pointArray   = [];\r\n\t\tthis._sampleFactor = 1;\r\n\t\tthis._networkSize  = colors;\r\n\r\n\t\tthis._distance.setWhitePoint(255 << networkBiasShift, 255 << networkBiasShift, 255 << networkBiasShift, 255 << networkBiasShift);\r\n\t}\r\n\r\n\tsample(pointBuffer : PointContainer) : void {\r\n\t\tthis._pointArray = this._pointArray.concat(pointBuffer.getPointArray());\r\n\t}\r\n\r\n\tquantize() : Palette {\r\n\t\tthis._init();\r\n\t\tthis._learn();\r\n\r\n\t\treturn this._buildPalette();\r\n\t}\r\n\r\n\tprivate _init() : void {\r\n\t\tthis._freq     = [];\r\n\t\tthis._bias     = [];\r\n\t\tthis._radPower = [];\r\n\t\tthis._network  = [];\r\n\t\tfor (var i = 0; i < this._networkSize; i++) {\r\n\t\t\tthis._network[ i ] = new Neuron((i << (networkBiasShift + 8)) / this._networkSize | 0);\r\n\r\n\t\t\t// 1/this._networkSize\r\n\t\t\tthis._freq[ i ] = NeuQuant._initialBias / this._networkSize | 0;\r\n\t\t\tthis._bias[ i ] = 0;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Main Learning Loop\r\n\t */\r\n\tprivate _learn() : void {\r\n\t\tvar i : number,\r\n\t\t\tstep : number;\r\n\r\n\t\tvar pointsNumber = this._pointArray.length;\r\n\t\tif (pointsNumber < NeuQuant._minpicturebytes) this._sampleFactor = 1;\r\n\r\n\t\tvar alphadec       = 30 + (this._sampleFactor - 1) / 3 | 0,\r\n\t\t\tpointIndex     = 0,\r\n\t\t\tpointsToSample = pointsNumber / this._sampleFactor | 0,\r\n\t\t\tdelta          = pointsToSample / NeuQuant._nCycles | 0,\r\n\t\t\talpha          = NeuQuant._initAlpha,\r\n\t\t\tradius         = (this._networkSize >> 3) * NeuQuant._radiusBias;\r\n\r\n\t\tvar rad = radius >> NeuQuant._radiusBiasShift;\r\n\t\tif (rad <= 1) rad = 0;\r\n\r\n\t\tfor (i = 0; i < rad; i++) {\r\n\t\t\tthis._radPower[ i ] = alpha * (((rad * rad - i * i) * NeuQuant._radBias) / (rad * rad)) >>> 0;\r\n\t\t}\r\n\r\n\t\tif (pointsNumber < NeuQuant._minpicturebytes) {\r\n\t\t\tstep = 1;\r\n\t\t} else if (pointsNumber % NeuQuant._prime1 != 0) {\r\n\t\t\tstep = NeuQuant._prime1;\r\n\t\t} else if ((pointsNumber % NeuQuant._prime2) != 0) {\r\n\t\t\tstep = NeuQuant._prime2;\r\n\t\t} else if ((pointsNumber % NeuQuant._prime3) != 0) {\r\n\t\t\tstep = NeuQuant._prime3;\r\n\t\t} else {\r\n\t\t\tstep = NeuQuant._prime4;\r\n\t\t}\r\n\r\n\t\ti = 0;\r\n\t\twhile (i < pointsToSample) {\r\n\t\t\tvar point = this._pointArray[ pointIndex ],\r\n\t\t\t\tb     = point.b << networkBiasShift,\r\n\t\t\t\tg     = point.g << networkBiasShift,\r\n\t\t\t\tr     = point.r << networkBiasShift,\r\n\t\t\t\ta     = point.a << networkBiasShift,\r\n\t\t\t\tj     = this._contest(b, g, r, a);\r\n\r\n\t\t\tthis._alterSingle(alpha, j, b, g, r, a);\r\n\r\n\t\t\tif (rad != 0) this._alterNeighbour(rad, j, b, g, r, a);\r\n\r\n\t\t\t/* alter neighbours */\r\n\t\t\tpointIndex += step;\r\n\t\t\tif (pointIndex >= pointsNumber) pointIndex -= pointsNumber;\r\n\t\t\ti++;\r\n\r\n\t\t\tif (delta == 0) delta = 1;\r\n\r\n\t\t\tif (i % delta == 0) {\r\n\t\t\t\talpha -= (alpha / alphadec) | 0;\r\n\t\t\t\tradius -= (radius / NeuQuant._radiusDecrease) | 0;\r\n\t\t\t\trad = radius >> NeuQuant._radiusBiasShift;\r\n\r\n\t\t\t\tif (rad <= 1) rad = 0;\r\n\t\t\t\tfor (j = 0; j < rad; j++) this._radPower[ j ] = alpha * (((rad * rad - j * j) * NeuQuant._radBias) / (rad * rad)) >>> 0;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprivate _buildPalette() : Palette {\r\n\t\tvar palette = new Palette();\r\n\r\n\t\tthis._network.forEach(neuron => {\r\n\t\t\tpalette.add(neuron.toPoint());\r\n\t\t});\r\n\r\n\t\tpalette.sort();\r\n\t\treturn palette;\r\n\t}\r\n\r\n\t/**\r\n\t * Move adjacent neurons by precomputed alpha*(1-((i-j)^2/[r]^2)) in radpower[|i-j|]\r\n\t */\r\n\tprivate _alterNeighbour(rad : number, i : number, b : number, g : number, r : number, al : number) : void {\r\n\t\tvar j : number, k : number, lo : number, hi : number, m : number, p : Neuron;\r\n\r\n\t\tlo = i - rad;\r\n\t\tif (lo < -1) lo = -1;\r\n\r\n\t\thi = i + rad;\r\n\r\n\t\tif (hi > this._networkSize) hi = this._networkSize;\r\n\r\n\t\tj = i + 1;\r\n\t\tk = i - 1;\r\n\t\tm = 1;\r\n\r\n\t\twhile (j < hi || k > lo) {\r\n\r\n\t\t\tvar a = this._radPower[ m++ ] / NeuQuant._alphaRadBias;\r\n\t\t\tif (j < hi) {\r\n\t\t\t\tp = this._network[ j++ ];\r\n\t\t\t\tp.subtract(\r\n\t\t\t\t\ta * (p.r - r),\r\n\t\t\t\t\ta * (p.g - g),\r\n\t\t\t\t\ta * (p.b - b),\r\n\t\t\t\t\ta * (p.a - al)\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tif (k > lo) {\r\n\t\t\t\tp = this._network[ k-- ];\r\n\t\t\t\tp.subtract(\r\n\t\t\t\t\ta * (p.r - r),\r\n\t\t\t\t\ta * (p.g - g),\r\n\t\t\t\t\ta * (p.b - b),\r\n\t\t\t\t\ta * (p.a - al)\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Move neuron i towards biased (b,g,r) by factor alpha\r\n\t */\r\n\tprivate _alterSingle(alpha : number, i : number, b : number, g : number, r : number, a : number) : void {\r\n\t\talpha /= NeuQuant._initAlpha;\r\n\r\n\t\t/* alter hit neuron */\r\n\t\tvar n = this._network[ i ];\r\n\t\tn.subtract(\r\n\t\t\talpha * (n.r - r),\r\n\t\t\talpha * (n.g - g),\r\n\t\t\talpha * (n.b - b),\r\n\t\t\talpha * (n.a - a)\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Search for biased BGR values\r\n\t * description:\r\n\t *    finds closest neuron (min dist) and updates freq\r\n\t *    finds best neuron (min dist-bias) and returns position\r\n\t *    for frequently chosen neurons, freq[i] is high and bias[i] is negative\r\n\t *    bias[i] = _gamma*((1/this._networkSize)-freq[i])\r\n\t *\r\n\t * Original distance equation:\r\n\t *        dist = abs(dR) + abs(dG) + abs(dB)\r\n\t */\r\n\tprivate _contest(b : number, g : number, r : number, al : number) : number {\r\n\t\tvar multiplier  = (255 * 4) << networkBiasShift,\r\n\t\t\tbestd       = ~(1 << 31),\r\n\t\t\tbestbiasd   = bestd,\r\n\t\t\tbestpos     = -1,\r\n\t\t\tbestbiaspos = bestpos;\r\n\r\n\t\tfor (var i = 0; i < this._networkSize; i++) {\r\n\t\t\tvar n = this._network[ i ];\r\n\r\n\t\t\tvar dist = this._distance.calculateNormalized(<any>n, <any>{ r : r, g : g, b : b, a : al }) * multiplier | 0;\r\n\r\n\t\t\tif (dist < bestd) {\r\n\t\t\t\tbestd   = dist;\r\n\t\t\t\tbestpos = i;\r\n\t\t\t}\r\n\r\n\t\t\tvar biasdist = dist - ((this._bias[ i ]) >> (NeuQuant._initialBiasShift - networkBiasShift));\r\n\t\t\tif (biasdist < bestbiasd) {\r\n\t\t\t\tbestbiasd   = biasdist;\r\n\t\t\t\tbestbiaspos = i;\r\n\t\t\t}\r\n\t\t\tvar betafreq = (this._freq[ i ] >> NeuQuant._betaShift);\r\n\t\t\tthis._freq[ i ] -= betafreq;\r\n\t\t\tthis._bias[ i ] += (betafreq << NeuQuant._gammaShift);\r\n\t\t}\r\n\t\tthis._freq[ bestpos ] += NeuQuant._beta;\r\n\t\tthis._bias[ bestpos ] -= NeuQuant._betaGamma;\r\n\t\treturn bestbiaspos;\r\n\t}\r\n}\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/palette/neuquant/neuquant.ts\n **/","/**\r\n * @preserve\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * palette.ts - part of Image Quantization Library\r\n */\r\n\r\nimport {Point} from \"./point\"\r\nimport {PointContainer} from \"./pointContainer\"\r\nimport {IDistanceCalculator} from \"../distance/common\"\r\nimport {rgb2hsl} from \"../conversion/rgb2hsl\"\r\n\r\n// TODO: make paletteArray via pointBuffer, so, export will be available via pointBuffer.exportXXX\r\n\r\nvar hueGroups : number = 10;\r\n\r\nexport function hueGroup(hue : number, segmentsNumber : number) {\r\n\tvar maxHue = 360,\r\n\t\tseg = maxHue / segmentsNumber,\r\n\t\thalf = seg / 2;\r\n\r\n\tfor (var i = 1, mid = seg - half; i < segmentsNumber; i++, mid+=seg) {\r\n\t\tif (hue >= mid && hue < mid + seg) return i;\r\n\t}\r\n\treturn 0;\r\n}\r\n\r\nexport class Palette {\r\n\tprivate _pointContainer : PointContainer;\r\n\tprivate _pointArray : Point[]                   = [];\r\n\tprivate _i32idx : { [ key : string ] : number } = {};\r\n\r\n\tconstructor() {\r\n\t\tthis._pointContainer = new PointContainer();\r\n\t\tthis._pointContainer.setHeight(1);\r\n\t\tthis._pointArray = this._pointContainer.getPointArray();\r\n\t}\r\n\r\n\tadd(color : Point) {\r\n\t\tthis._pointArray.push(color);\r\n\t\tthis._pointContainer.setWidth(this._pointArray.length);\r\n\t}\r\n\r\n\thas(color : Point) {\r\n\t\tfor (var i = this._pointArray.length - 1; i >= 0; i--) {\r\n\t\t\tif (color.uint32 === this._pointArray[ i ].uint32) return true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t// TOTRY: use HUSL - http://boronine.com/husl/ http://www.husl-colors.org/ https://github.com/husl-colors/husl\r\n\tgetNearestColor(colorDistanceCalculator : IDistanceCalculator, color : Point) : Point {\r\n\t\treturn this._pointArray[ this.getNearestIndex(colorDistanceCalculator, color) | 0 ];\r\n\t}\r\n\r\n\tgetPointContainer() : PointContainer {\r\n\t\treturn this._pointContainer;\r\n\t}\r\n\r\n\t// TOTRY: use HUSL - http://boronine.com/husl/\r\n\t/*\r\n\t public nearestIndexByUint32(i32) {\r\n\t var idx : number = this._nearestPointFromCache(\"\" + i32);\r\n\t if (idx >= 0) return idx;\r\n\r\n\t var min = 1000,\r\n\t rgb = [\r\n\t (i32 & 0xff),\r\n\t (i32 >>> 8) & 0xff,\r\n\t (i32 >>> 16) & 0xff,\r\n\t (i32 >>> 24) & 0xff\r\n\t ],\r\n\t len = this._pointArray.length;\r\n\r\n\t idx = 0;\r\n\t for (var i = 0; i < len; i++) {\r\n\t var dist = Utils.distEuclidean(rgb, this._pointArray[i].rgba);\r\n\r\n\t if (dist < min) {\r\n\t min = dist;\r\n\t idx = i;\r\n\t }\r\n\t }\r\n\r\n\t this._i32idx[i32] = idx;\r\n\t return idx;\r\n\t }\r\n\t */\r\n\r\n\tprivate _nearestPointFromCache(key : string) {\r\n\t\treturn typeof this._i32idx[ key ] === \"number\" ? this._i32idx[ key ] : -1;\r\n\t}\r\n\r\n\tprivate getNearestIndex(colorDistanceCalculator : IDistanceCalculator, point : Point) : number {\r\n\t\tvar idx : number = this._nearestPointFromCache(\"\" + point.uint32);\r\n\t\tif (idx >= 0) return idx;\r\n\r\n\t\tvar minimalDistance : number = Number.MAX_VALUE;\r\n\r\n\t\tfor (var idx = 0, i = 0, l = this._pointArray.length; i < l; i++) {\r\n\t\t\tvar p        = this._pointArray[ i ],\r\n\t\t\t\tdistance = colorDistanceCalculator.calculateRaw(point.r, point.g, point.b, point.a, p.r, p.g, p.b, p.a);\r\n\r\n\t\t\tif (distance < minimalDistance) {\r\n\t\t\t\tminimalDistance = distance;\r\n\t\t\t\tidx             = i;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._i32idx[ point.uint32 ] = idx;\r\n\t\treturn idx;\r\n\t}\r\n\r\n\t/*\r\n\t public reduce(histogram : ColorHistogram, colors : number) {\r\n\t if (this._pointArray.length > colors) {\r\n\t var idxi32 = histogram.getImportanceSortedColorsIDXI32();\r\n\r\n\t // quantize histogram to existing palette\r\n\t var keep = [], uniqueColors = 0, idx, pruned = false;\r\n\r\n\t for (var i = 0, len = idxi32.length; i < len; i++) {\r\n\t // palette length reached, unset all remaining colors (sparse palette)\r\n\t if (uniqueColors >= colors) {\r\n\t this.prunePal(keep);\r\n\t pruned = true;\r\n\t break;\r\n\t } else {\r\n\t idx = this.nearestIndexByUint32(idxi32[i]);\r\n\t if (keep.indexOf(idx) < 0) {\r\n\t keep.push(idx);\r\n\t uniqueColors++;\r\n\t }\r\n\t }\r\n\t }\r\n\r\n\t if (!pruned) {\r\n\t this.prunePal(keep);\r\n\t }\r\n\t }\r\n\t }\r\n\r\n\t // TODO: check usage, not tested!\r\n\t public prunePal(keep : number[]) {\r\n\t var colors = this._pointArray.length;\r\n\t for (var colorIndex = colors - 1; colorIndex >= 0; colorIndex--) {\r\n\t if (keep.indexOf(colorIndex) < 0) {\r\n\r\n\t if(colorIndex + 1 < colors) {\r\n\t this._pointArray[ colorIndex ] = this._pointArray [ colors - 1 ];\r\n\t }\r\n\t --colors;\r\n\t //this._pointArray[colorIndex] = null;\r\n\t }\r\n\t }\r\n\t console.log(\"colors pruned: \" + (this._pointArray.length - colors));\r\n\t this._pointArray.length = colors;\r\n\t this._i32idx = {};\r\n\t }\r\n\t */\r\n\r\n\t// TODO: group very low lum and very high lum colors\r\n\t// TODO: pass custom sort order\r\n\t// TODO: sort criteria function should be placed to HueStats class\r\n\tsort() {\r\n\t\tthis._i32idx = {};\r\n\t\tthis._pointArray.sort((a : Point, b : Point) => {\r\n\t\t\tvar hslA = rgb2hsl(a.r, a.g, a.b),\r\n\t\t\t\thslB = rgb2hsl(b.r, b.g, b.b);\r\n\r\n\t\t\t// sort all grays + whites together\r\n\t\t\tvar hueA = (a.r === a.g && a.g === a.b) ? 0 : 1 + hueGroup(hslA.h, hueGroups);\r\n\t\t\tvar hueB = (b.r === b.g && b.g === b.b) ? 0 : 1 + hueGroup(hslB.h, hueGroups);\r\n\t\t\t/*\r\n\t\t\t var hueA = (a.r === a.g && a.g === a.b) ? 0 : 1 + Utils.hueGroup(hslA.h, hueGroups);\r\n\t\t\t var hueB = (b.r === b.g && b.g === b.b) ? 0 : 1 + Utils.hueGroup(hslB.h, hueGroups);\r\n\t\t\t */\r\n\r\n\t\t\tvar hueDiff = hueB - hueA;\r\n\t\t\tif (hueDiff) return -hueDiff;\r\n\r\n\t\t\t/*\r\n\t\t\t var lumDiff = Utils.lumGroup(+hslB.l.toFixed(2)) - Utils.lumGroup(+hslA.l.toFixed(2));\r\n\t\t\t if (lumDiff) return -lumDiff;\r\n\t\t\t */\r\n\t\t\tvar lA = a.getLuminosity(true),\r\n\t\t\t\tlB = b.getLuminosity(true);\r\n\r\n\t\t\tif (lB - lA !== 0) return lB - lA;\r\n\r\n\t\t\tvar satDiff = ((hslB.s * 100) | 0) - ((hslA.s * 100) | 0);\r\n\t\t\tif (satDiff) return -satDiff;\r\n\r\n\t\t\t// TODO: why there was no return here? What to return instead? 0?\r\n\t\t\treturn 0;\r\n\t\t});\r\n\t}\r\n}\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/utils/palette.ts\n **/","/**\r\n * @preserve\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * pointContainer.ts - part of Image Quantization Library\r\n */\r\nimport {Point} from \"./point\"\r\n\r\n/**\r\n * v8 optimizations done.\r\n * fromXXX methods are static to move out polymorphic code from class instance itself.\r\n */\r\nexport class PointContainer {\r\n\tprivate _pointArray : Point[];\r\n\tprivate _width : number;\r\n\tprivate _height : number;\r\n\r\n\tconstructor() {\r\n\t\tthis._width      = 0;\r\n\t\tthis._height     = 0;\r\n\t\tthis._pointArray = [];\r\n\t}\r\n\r\n\tgetWidth() : number {\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tgetHeight() : number {\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tsetWidth(width : number) : void {\r\n\t\tthis._width = width;\r\n\t}\r\n\r\n\tsetHeight(height : number) : void {\r\n\t\tthis._height = height;\r\n\t}\r\n\r\n\tgetPointArray() : Point[] {\r\n\t\treturn this._pointArray;\r\n\t}\r\n\r\n\tclone() : PointContainer {\r\n\t\tvar clone     = new PointContainer();\r\n\t\tclone._width  = this._width;\r\n\t\tclone._height = this._height;\r\n\r\n\t\tclone._pointArray = [];\r\n\t\tfor (var i = 0, l = this._pointArray.length; i < l; i++) {\r\n\t\t\tclone._pointArray[ i ] = Point.createByUint32(this._pointArray[ i ].uint32 | 0); // \"| 0\" is added for v8 optimization\r\n\t\t}\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\ttoUint32Array() : Uint32Array {\r\n\t\tvar l           = this._pointArray.length,\r\n\t\t\tuint32Array = new Uint32Array(l);\r\n\r\n\t\tfor (var i = 0; i < l; i++) {\r\n\t\t\tuint32Array[ i ] = this._pointArray[ i ].uint32;\r\n\t\t}\r\n\r\n\t\treturn uint32Array;\r\n\t}\r\n\r\n\ttoUint8Array() : Uint8Array {\r\n\t\treturn new Uint8Array(this.toUint32Array().buffer);\r\n\t}\r\n\r\n\tstatic fromHTMLImageElement(img : HTMLImageElement) : PointContainer {\r\n\t\tvar width  = img.naturalWidth,\r\n\t\t\theight = img.naturalHeight;\r\n\r\n\t\tvar canvas    = document.createElement(\"canvas\");\r\n\t\tcanvas.width  = width;\r\n\t\tcanvas.height = height;\r\n\r\n\t\tvar ctx = <CanvasRenderingContext2D>canvas.getContext(\"2d\");\r\n\t\tctx.drawImage(img, 0, 0, width, height, 0, 0, width, height);\r\n\r\n\t\treturn PointContainer.fromHTMLCanvasElement(canvas);\r\n\t}\r\n\r\n\tstatic fromHTMLCanvasElement(canvas : HTMLCanvasElement) : PointContainer {\r\n\t\tvar width  = canvas.width,\r\n\t\t\theight = canvas.height;\r\n\r\n\t\tvar ctx     = <CanvasRenderingContext2D>canvas.getContext(\"2d\"),\r\n\t\t\timgData = ctx.getImageData(0, 0, width, height);\r\n\r\n\t\treturn PointContainer.fromImageData(imgData);\r\n\t}\r\n\r\n\tstatic fromNodeCanvas(canvas : any) : PointContainer {\r\n\t\treturn PointContainer.fromHTMLCanvasElement(canvas);\r\n\t}\r\n\r\n\tstatic fromImageData(imageData : ImageData) : PointContainer {\r\n\t\tvar width  = imageData.width,\r\n\t\t\theight = imageData.height;\r\n\r\n\t\treturn PointContainer.fromCanvasPixelArray(imageData.data, width, height);\r\n\t\t/*\r\n\t\t var buf8;\r\n\t\t if (Utils.typeOf(imageData.data) == \"CanvasPixelArray\")\r\n\t\t buf8 = new Uint8Array(imageData.data);\r\n\t\t else\r\n\t\t buf8 = imageData.data;\r\n\r\n\t\t this.fromUint32Array(new Uint32Array(buf8.buffer), width, height);\r\n\t\t */\r\n\t}\r\n\r\n\tstatic fromArray(byteArray : number[], width : number, height : number) : PointContainer {\r\n\t\tvar uint8array = new Uint8Array(byteArray);\r\n\t\treturn PointContainer.fromUint8Array(uint8array, width, height);\r\n\t}\r\n\r\n\tstatic fromCanvasPixelArray(data : any, width : number, height : number) : PointContainer {\r\n\t\treturn PointContainer.fromArray(data, width, height);\r\n\t}\r\n\r\n\tstatic fromUint8Array(uint8array : Uint8Array, width : number, height : number) : PointContainer {\r\n\t\treturn PointContainer.fromUint32Array(new Uint32Array(uint8array.buffer), width, height);\r\n\t}\r\n\r\n\tstatic fromUint32Array(uint32array : Uint32Array, width : number, height : number) : PointContainer {\r\n\t\tvar container = new PointContainer();\r\n\r\n\t\tcontainer._width  = width;\r\n\t\tcontainer._height = height;\r\n\r\n\t\tcontainer._pointArray = [];//new Array(uint32array.length);\r\n\t\tfor (var i = 0, l = uint32array.length; i < l; i++) {\r\n\t\t\tcontainer._pointArray[ i ] = Point.createByUint32(uint32array[ i ] | 0); // \"| 0\" is added for v8 optimization\r\n\t\t}\r\n\r\n\t\treturn container;\r\n\t}\r\n}\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/utils/pointContainer.ts\n **/","/**\r\n * @preserve\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * point.ts - part of Image Quantization Library\r\n */\r\nimport {Y} from \"../constants/bt709\"\r\n\r\n/**\r\n * v8 optimized class\r\n * 1) \"constructor\" should have initialization with worst types\r\n * 2) \"set\" should have |0 / >>> 0\r\n */\r\nexport class Point {\r\n\tr : number;\r\n\tg : number;\r\n\tb : number;\r\n\ta : number;\r\n\tuint32 : number;\r\n\trgba : number[]; // TODO: better name is quadruplet or quad may be?\r\n\tLab : { L : number; a : number; b : number };\r\n\r\n\tstatic createByQuadruplet(quadruplet : number[]) : Point {\r\n\t\tvar point : Point = new Point();\r\n\r\n\t\tpoint.r = quadruplet[ 0 ] | 0;\r\n\t\tpoint.g = quadruplet[ 1 ] | 0;\r\n\t\tpoint.b = quadruplet[ 2 ] | 0;\r\n\t\tpoint.a = quadruplet[ 3 ] | 0;\r\n\t\tpoint._loadUINT32();\r\n\t\tpoint._loadQuadruplet();\r\n\t\t//point._loadLab();\r\n\t\treturn point;\r\n\t}\r\n\r\n\tstatic createByRGBA(red : number, green : number, blue : number, alpha : number) : Point {\r\n\t\tvar point : Point = new Point();\r\n\r\n\t\tpoint.r = red | 0;\r\n\t\tpoint.g = green | 0;\r\n\t\tpoint.b = blue | 0;\r\n\t\tpoint.a = alpha | 0;\r\n\t\tpoint._loadUINT32();\r\n\t\tpoint._loadQuadruplet();\r\n\t\t//point._loadLab();\r\n\t\treturn point;\r\n\t}\r\n\r\n\tstatic createByUint32(uint32 : number) : Point {\r\n\t\tvar point : Point = new Point();\r\n\r\n\t\tpoint.uint32 = uint32 >>> 0;\r\n\t\tpoint._loadRGBA();\r\n\t\tpoint._loadQuadruplet();\r\n\t\t//point._loadLab();\r\n\t\treturn point;\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tthis.uint32 = -1 >>> 0;\r\n\t\tthis.r      = this.g = this.b = this.a = 0;\r\n\t\tthis.rgba = new Array(4);\r\n\t\t/*[ this.r , this.g , this.b , this.a ]*/\r\n\t\tthis.rgba[ 0 ] = 0;\r\n\t\tthis.rgba[ 1 ] = 0;\r\n\t\tthis.rgba[ 2 ] = 0;\r\n\t\tthis.rgba[ 3 ] = 0;\r\n\t\t/*\r\n\t\t this.Lab = {\r\n\t\t L : 0.0,\r\n\t\t a : 0.0,\r\n\t\t b : 0.0\r\n\t\t };\r\n\t\t */\r\n\t}\r\n\r\n\tfrom(point : Point) {\r\n\t\tthis.r         = point.r;\r\n\t\tthis.g         = point.g;\r\n\t\tthis.b         = point.b;\r\n\t\tthis.a         = point.a;\r\n\t\tthis.uint32    = point.uint32;\r\n\t\tthis.rgba[ 0 ] = point.r;\r\n\t\tthis.rgba[ 1 ] = point.g;\r\n\t\tthis.rgba[ 2 ] = point.b;\r\n\t\tthis.rgba[ 3 ] = point.a;\r\n\r\n\t\t/*\r\n\t\t this.Lab.L = point.Lab.L;\r\n\t\t this.Lab.a = point.Lab.a;\r\n\t\t this.Lab.b = point.Lab.b;\r\n\t\t */\r\n\t}\r\n\r\n\t/*\r\n\t * TODO:\r\n\t Luminance from RGB:\r\n\r\n\t Luminance (standard for certain colour spaces): (0.2126*R + 0.7152*G + 0.0722*B) [1]\r\n\t Luminance (perceived option 1): (0.299*R + 0.587*G + 0.114*B) [2]\r\n\t Luminance (perceived option 2, slower to calculate):  sqrt( 0.241*R^2 + 0.691*G^2 + 0.068*B^2 ) ? sqrt( 0.299*R^2 + 0.587*G^2 + 0.114*B^2 ) (thanks to @MatthewHerbst) [http://alienryderflex.com/hsp.html]\r\n\t */\r\n\tgetLuminosity(useAlphaChannel : boolean) : number {\r\n\t\tvar r = this.r,\r\n\t\t\tg = this.g,\r\n\t\t\tb = this.b;\r\n\r\n\t\tif (useAlphaChannel) {\r\n\t\t\tr = Math.min(255, 255 - this.a + this.a * r / 255);\r\n\t\t\tg = Math.min(255, 255 - this.a + this.a * g / 255);\r\n\t\t\tb = Math.min(255, 255 - this.a + this.a * b / 255);\r\n\t\t}\r\n\r\n\t\t//var luma = this.r * Point._RED_COEFFICIENT + this.g * Point._GREEN_COEFFICIENT + this.b * Point._BLUE_COEFFICIENT;\r\n\r\n\t\t/*\r\n\t\t if(useAlphaChannel) {\r\n\t\t luma = (luma * (255 - this.a)) / 255;\r\n\t\t }\r\n\t\t */\r\n\r\n\t\treturn r * Y.RED + g * Y.GREEN + b * Y.BLUE;\r\n\t}\r\n\r\n\tprivate _loadUINT32() {\r\n\t\tthis.uint32 = (this.a << 24 | this.b << 16 | this.g << 8 | this.r) >>> 0;\r\n\t}\r\n\r\n\tprivate _loadRGBA() {\r\n\t\tthis.r = this.uint32 & 0xff;\r\n\t\tthis.g = (this.uint32 >>> 8) & 0xff;\r\n\t\tthis.b = (this.uint32 >>> 16) & 0xff;\r\n\t\tthis.a = (this.uint32 >>> 24) & 0xff;\r\n\t}\r\n\r\n\tprivate _loadQuadruplet() {\r\n\t\tthis.rgba[ 0 ] = this.r;\r\n\t\tthis.rgba[ 1 ] = this.g;\r\n\t\tthis.rgba[ 2 ] = this.b;\r\n\t\tthis.rgba[ 3 ] = this.a;\r\n\r\n\t\t/*\r\n\t\t var xyz = rgb2xyz(this.r, this.g, this.b);\r\n\t\t var lab = xyz2lab(xyz.x, xyz.y, xyz.z);\r\n\t\t this.lab.l = lab.l;\r\n\t\t this.lab.a = lab.a;\r\n\t\t this.lab.b = lab.b;\r\n\t\t */\r\n\t}\r\n\r\n\t/*\r\n\t private _loadLab() : void {\r\n\t var Lab = Color.Conversion.rgb2lab(this.r, this.g, this.b);\r\n\t this.Lab.L = Lab.L;\r\n\t this.Lab.a = Lab.a;\r\n\t this.Lab.b = Lab.b;\r\n\t }\r\n\t */\r\n}\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/utils/point.ts\n **/","/*\r\n * NeuQuantFloat Neural-Net Quantization Algorithm\r\n * ------------------------------------------\r\n *\r\n * Copyright (c) 1994 Anthony Dekker\r\n *\r\n * NEUQUANT Neural-Net quantization algorithm by Anthony Dekker, 1994. See\r\n * \"Kohonen neural networks for optimal colour quantization\" in \"Network:\r\n * Computation in Neural Systems\" Vol. 5 (1994) pp 351-367. for a discussion of\r\n * the algorithm.\r\n *\r\n * Any party obtaining a copy of these files from the author, directly or\r\n * indirectly, is granted, free of charge, a full and unrestricted irrevocable,\r\n * world-wide, paid up, royalty-free, nonexclusive right and license to deal in\r\n * this software and documentation files (the \"Software\"), including without\r\n * limitation the rights to use, copy, modify, merge, publish, distribute,\r\n * sublicense, and/or sell copies of the Software, and to permit persons who\r\n * receive copies from any such party to do so, with the only requirement being\r\n * that this copyright notice remain intact.\r\n */\r\n/**\r\n * @preserve TypeScript port:\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * neuquant.ts - part of Image Quantization Library\r\n */\r\nimport {Palette} from \"../../utils/palette\"\r\nimport {Point} from \"../../utils/point\"\r\nimport {PointContainer} from \"../../utils/pointContainer\"\r\nimport {IDistanceCalculator} from \"../../distance/common\"\r\nimport {IPaletteQuantizer} from \"../common\"\r\n\r\n// bias for colour values\r\nvar networkBiasShift = 3;\r\n\r\nclass NeuronFloat {\r\n\tr : number;\r\n\tg : number;\r\n\tb : number;\r\n\ta : number;\r\n\r\n\tconstructor(defaultValue : number) {\r\n\t\tthis.r = this.g = this.b = this.a = defaultValue;\r\n\t}\r\n\r\n\t/**\r\n\t * There is a fix in original NEUQUANT by Anthony Dekker (http://members.ozemail.com.au/~dekker/NEUQUANT.HTML)\r\n\t * @example\r\n\t * r = Math.min(255, (neuron.r + (1 << (networkBiasShift - 1))) >> networkBiasShift);\r\n\t */\r\n\ttoPoint() : Point {\r\n\t\treturn Point.createByRGBA(this.r >> networkBiasShift, this.g >> networkBiasShift, this.b >> networkBiasShift, this.a >> networkBiasShift);\r\n\t}\r\n\r\n\tsubtract(r : number, g : number, b : number, a : number) : void {\r\n\t\tthis.r -= r;\r\n\t\tthis.g -= g;\r\n\t\tthis.b -= b;\r\n\t\tthis.a -= a;\r\n\t}\r\n}\r\n\r\nexport class NeuQuantFloat implements IPaletteQuantizer {\r\n\t/*\r\n\t four primes near 500 - assume no image has a length so large\r\n\t that it is divisible by all four primes\r\n\t */\r\n\tprivate static _prime1 : number          = 499;\r\n\tprivate static _prime2 : number          = 491;\r\n\tprivate static _prime3 : number          = 487;\r\n\tprivate static _prime4 : number          = 503;\r\n\tprivate static _minpicturebytes : number = NeuQuantFloat._prime4;\r\n\r\n\t// no. of learning cycles\r\n\tprivate static _nCycles : number = 100;\r\n\r\n\t// defs for freq and bias\r\n\tprivate static _initialBiasShift : number = 16;\r\n\r\n\t// bias for fractions\r\n\tprivate static _initialBias : number = (1 << NeuQuantFloat._initialBiasShift);\r\n\tprivate static _gammaShift : number  = 10;\r\n\r\n\t// gamma = 1024\r\n\t// TODO: why gamma is never used?\r\n\t//private static _gamma : number     = (1 << NeuQuantFloat._gammaShift);\r\n\tprivate static _betaShift : number = 10;\r\n\tprivate static _beta : number      = (NeuQuantFloat._initialBias >> NeuQuantFloat._betaShift);\r\n\r\n\t// beta = 1/1024\r\n\tprivate static _betaGamma : number = (NeuQuantFloat._initialBias << (NeuQuantFloat._gammaShift - NeuQuantFloat._betaShift));\r\n\r\n\t/*\r\n\t * for 256 cols, radius starts\r\n\t */\r\n\tprivate static _radiusBiasShift : number = 6;\r\n\r\n\t// at 32.0 biased by 6 bits\r\n\tprivate static _radiusBias : number = 1 << NeuQuantFloat._radiusBiasShift;\r\n\r\n\t// and decreases by a factor of 1/30 each cycle\r\n\tprivate static _radiusDecrease : number = 30;\r\n\r\n\t/* defs for decreasing alpha factor */\r\n\r\n\t// alpha starts at 1.0\r\n\tprivate static _alphaBiasShift : number = 10;\r\n\r\n\t// biased by 10 bits\r\n\tprivate static _initAlpha : number = (1 << NeuQuantFloat._alphaBiasShift);\r\n\r\n\t/* radBias and alphaRadBias used for radpower calculation */\r\n\tprivate static _radBiasShift : number      = 8;\r\n\tprivate static _radBias : number           = 1 << NeuQuantFloat._radBiasShift;\r\n\tprivate static _alphaRadBiasShift : number = NeuQuantFloat._alphaBiasShift + NeuQuantFloat._radBiasShift;\r\n\tprivate static _alphaRadBias : number      = 1 << NeuQuantFloat._alphaRadBiasShift;\r\n\r\n\tprivate _pointArray : Point[];\r\n\tprivate _networkSize : number;\r\n\tprivate _network : NeuronFloat[];\r\n\r\n\t/** sampling factor 1..30 */\r\n\tprivate _sampleFactor : number;\r\n\tprivate _radPower : number[];\r\n\r\n\t// bias and freq arrays for learning\r\n\tprivate _freq : number[];\r\n\r\n\t/* for network lookup - really 256 */\r\n\tprivate _bias : number[];\r\n\tprivate _distance : IDistanceCalculator;\r\n\r\n\tconstructor(colorDistanceCalculator : IDistanceCalculator, colors : number = 256) {\r\n\t\tthis._distance     = colorDistanceCalculator;\r\n\t\tthis._pointArray   = [];\r\n\t\tthis._sampleFactor = 1;\r\n\t\tthis._networkSize  = colors;\r\n\r\n\t\tthis._distance.setWhitePoint(255 << networkBiasShift, 255 << networkBiasShift, 255 << networkBiasShift, 255 << networkBiasShift);\r\n\t}\r\n\r\n\tsample(pointBuffer : PointContainer) : void {\r\n\t\tthis._pointArray = this._pointArray.concat(pointBuffer.getPointArray());\r\n\t}\r\n\r\n\tquantize() : Palette {\r\n\t\tthis._init();\r\n\t\tthis._learn();\r\n\r\n\t\treturn this._buildPalette();\r\n\t}\r\n\r\n\tprivate _init() : void {\r\n\t\tthis._freq     = [];\r\n\t\tthis._bias     = [];\r\n\t\tthis._radPower = [];\r\n\t\tthis._network  = [];\r\n\t\tfor (var i = 0; i < this._networkSize; i++) {\r\n\t\t\tthis._network[ i ] = new NeuronFloat((i << (networkBiasShift + 8)) / this._networkSize);\r\n\r\n\t\t\t// 1/this._networkSize\r\n\t\t\tthis._freq[ i ] = NeuQuantFloat._initialBias / this._networkSize;\r\n\t\t\tthis._bias[ i ] = 0;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Main Learning Loop\r\n\t */\r\n\tprivate _learn() : void {\r\n\t\tvar i : number,\r\n\t\t\tstep : number;\r\n\r\n\t\tvar pointsNumber = this._pointArray.length;\r\n\t\tif (pointsNumber < NeuQuantFloat._minpicturebytes) this._sampleFactor = 1;\r\n\r\n\t\tvar alphadec       = 30 + (this._sampleFactor - 1) / 3,\r\n\t\t\tpointIndex     = 0,\r\n\t\t\tpointsToSample = pointsNumber / this._sampleFactor,\r\n\t\t\tdelta          = pointsToSample / NeuQuantFloat._nCycles | 0,\r\n\t\t\talpha          = NeuQuantFloat._initAlpha,\r\n\t\t\tradius         = (this._networkSize >> 3) * NeuQuantFloat._radiusBias;\r\n\r\n\t\tvar rad = radius >> NeuQuantFloat._radiusBiasShift;\r\n\t\tif (rad <= 1) rad = 0;\r\n\r\n\t\tfor (i = 0; i < rad; i++) {\r\n\t\t\tthis._radPower[ i ] = alpha * (((rad * rad - i * i) * NeuQuantFloat._radBias) / (rad * rad));\r\n\t\t}\r\n\r\n\t\tif (pointsNumber < NeuQuantFloat._minpicturebytes) {\r\n\t\t\tstep = 1;\r\n\t\t} else if (pointsNumber % NeuQuantFloat._prime1 != 0) {\r\n\t\t\tstep = NeuQuantFloat._prime1;\r\n\t\t} else if ((pointsNumber % NeuQuantFloat._prime2) != 0) {\r\n\t\t\tstep = NeuQuantFloat._prime2;\r\n\t\t} else if ((pointsNumber % NeuQuantFloat._prime3) != 0) {\r\n\t\t\tstep = NeuQuantFloat._prime3;\r\n\t\t} else {\r\n\t\t\tstep = NeuQuantFloat._prime4;\r\n\t\t}\r\n\r\n\t\ti = 0;\r\n\t\twhile (i < pointsToSample) {\r\n\t\t\tvar point = this._pointArray[ pointIndex ],\r\n\t\t\t\tb     = point.b << networkBiasShift,\r\n\t\t\t\tg     = point.g << networkBiasShift,\r\n\t\t\t\tr     = point.r << networkBiasShift,\r\n\t\t\t\ta     = point.a << networkBiasShift,\r\n\t\t\t\tj     = this._contest(b, g, r, a);\r\n\r\n\t\t\tthis._alterSingle(alpha, j, b, g, r, a);\r\n\r\n\t\t\tif (rad != 0) this._alterNeighbour(rad, j, b, g, r, a);\r\n\r\n\t\t\t/* alter neighbours */\r\n\t\t\tpointIndex += step;\r\n\t\t\tif (pointIndex >= pointsNumber) pointIndex -= pointsNumber;\r\n\t\t\ti++;\r\n\r\n\t\t\tif (delta == 0) delta = 1;\r\n\r\n\t\t\tif (i % delta == 0) {\r\n\t\t\t\talpha -= (alpha / alphadec);\r\n\t\t\t\tradius -= (radius / NeuQuantFloat._radiusDecrease);\r\n\t\t\t\trad = radius >> NeuQuantFloat._radiusBiasShift;\r\n\r\n\t\t\t\tif (rad <= 1) rad = 0;\r\n\t\t\t\tfor (j = 0; j < rad; j++) this._radPower[ j ] = alpha * (((rad * rad - j * j) * NeuQuantFloat._radBias) / (rad * rad));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprivate _buildPalette() : Palette {\r\n\t\tvar palette = new Palette();\r\n\r\n\t\tthis._network.forEach(neuron => {\r\n\t\t\tpalette.add(neuron.toPoint());\r\n\t\t});\r\n\r\n\t\tpalette.sort();\r\n\t\treturn palette;\r\n\t}\r\n\r\n\t/**\r\n\t * Move adjacent neurons by precomputed alpha*(1-((i-j)^2/[r]^2)) in radpower[|i-j|]\r\n\t */\r\n\tprivate _alterNeighbour(rad : number, i : number, b : number, g : number, r : number, al : number) : void {\r\n\t\tvar j : number, k : number, lo : number, hi : number, m : number, p : NeuronFloat;\r\n\r\n\t\tlo = i - rad;\r\n\t\tif (lo < -1) lo = -1;\r\n\r\n\t\thi = i + rad;\r\n\r\n\t\tif (hi > this._networkSize) hi = this._networkSize;\r\n\r\n\t\tj = i + 1;\r\n\t\tk = i - 1;\r\n\t\tm = 1;\r\n\r\n\t\twhile (j < hi || k > lo) {\r\n\r\n\t\t\tvar a = this._radPower[ m++ ] / NeuQuantFloat._alphaRadBias;\r\n\t\t\tif (j < hi) {\r\n\t\t\t\tp = this._network[ j++ ];\r\n\t\t\t\tp.subtract(\r\n\t\t\t\t\ta * (p.r - r),\r\n\t\t\t\t\ta * (p.g - g),\r\n\t\t\t\t\ta * (p.b - b),\r\n\t\t\t\t\ta * (p.a - al)\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tif (k > lo) {\r\n\t\t\t\tp = this._network[ k-- ];\r\n\t\t\t\tp.subtract(\r\n\t\t\t\t\ta * (p.r - r),\r\n\t\t\t\t\ta * (p.g - g),\r\n\t\t\t\t\ta * (p.b - b),\r\n\t\t\t\t\ta * (p.a - al)\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Move neuron i towards biased (b,g,r) by factor alpha\r\n\t */\r\n\tprivate _alterSingle(alpha : number, i : number, b : number, g : number, r : number, a : number) : void {\r\n\t\talpha /= NeuQuantFloat._initAlpha;\r\n\r\n\t\t/* alter hit neuron */\r\n\t\tvar n = this._network[ i ];\r\n\t\tn.subtract(\r\n\t\t\talpha * (n.r - r),\r\n\t\t\talpha * (n.g - g),\r\n\t\t\talpha * (n.b - b),\r\n\t\t\talpha * (n.a - a)\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Search for biased BGR values\r\n\t * description:\r\n\t *    finds closest neuron (min dist) and updates freq\r\n\t *    finds best neuron (min dist-bias) and returns position\r\n\t *    for frequently chosen neurons, freq[i] is high and bias[i] is negative\r\n\t *    bias[i] = _gamma*((1/this._networkSize)-freq[i])\r\n\t *\r\n\t * Original distance equation:\r\n\t *        dist = abs(dR) + abs(dG) + abs(dB)\r\n\t */\r\n\tprivate _contest(b : number, g : number, r : number, al : number) : number {\r\n\t\tvar multiplier  = (255 * 4) << networkBiasShift,\r\n\t\t\tbestd       = ~(1 << 31),\r\n\t\t\tbestbiasd   = bestd,\r\n\t\t\tbestpos     = -1,\r\n\t\t\tbestbiaspos = bestpos;\r\n\r\n\t\tfor (var i = 0; i < this._networkSize; i++) {\r\n\t\t\tvar n = this._network[ i ];\r\n\r\n\t\t\tvar dist = this._distance.calculateNormalized(<any>n, <any>{ r : r, g : g, b : b, a : al }) * multiplier;\r\n\r\n\t\t\tif (dist < bestd) {\r\n\t\t\t\tbestd   = dist;\r\n\t\t\t\tbestpos = i;\r\n\t\t\t}\r\n\r\n\t\t\tvar biasdist = dist - ((this._bias[ i ]) >> (NeuQuantFloat._initialBiasShift - networkBiasShift));\r\n\t\t\tif (biasdist < bestbiasd) {\r\n\t\t\t\tbestbiasd   = biasdist;\r\n\t\t\t\tbestbiaspos = i;\r\n\t\t\t}\r\n\t\t\tvar betafreq = (this._freq[ i ] >> NeuQuantFloat._betaShift);\r\n\t\t\tthis._freq[ i ] -= betafreq;\r\n\t\t\tthis._bias[ i ] += (betafreq << NeuQuantFloat._gammaShift);\r\n\t\t}\r\n\t\tthis._freq[ bestpos ] += NeuQuantFloat._beta;\r\n\t\tthis._bias[ bestpos ] -= NeuQuantFloat._betaGamma;\r\n\t\treturn bestbiaspos;\r\n\t}\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/palette/neuquant/neuquantFloat.ts\n **/","/*\r\n * Copyright (c) 2015, Leon Sorokin\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * RgbQuant.js - an image quantization lib\r\n */\r\n\r\n/**\r\n * @preserve TypeScript port:\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * rgbquant.ts - part of Image Quantization Library\r\n */\r\n\r\nimport {Palette} from \"../../utils/palette\"\r\nimport {Point} from \"../../utils/point\"\r\nimport {PointContainer} from \"../../utils/pointContainer\"\r\nimport {IDistanceCalculator} from \"../../distance/common\"\r\nimport {ColorHistogram} from \"./colorHistogram\"\r\nimport {IPaletteQuantizer} from \"../common\"\r\nimport {stableSort} from \"../../utils/arithmetic\"\r\n\r\nclass RemovedColor {\r\n\tindex : number;\r\n\tcolor : Point;\r\n\tdistance : number;\r\n\r\n\tconstructor(index : number, color : Point, distance : number) {\r\n\t\tthis.index    = index;\r\n\t\tthis.color    = color;\r\n\t\tthis.distance = distance;\r\n\t}\r\n}\r\n\r\n// TODO: make input/output image and input/output palettes with instances of class Point only!\r\nexport class RGBQuant implements IPaletteQuantizer {\r\n\t// desired final palette size\r\n\tprivate _colors : number;\r\n\r\n\t// color-distance threshold for initial reduction pass\r\n\tprivate _initialDistance : number;\r\n\r\n\t// subsequent passes threshold\r\n\tprivate _distanceIncrement : number;\r\n\r\n\t// accumulated histogram\r\n\tprivate _histogram : ColorHistogram;\r\n\tprivate _distance : IDistanceCalculator;\r\n\r\n\tconstructor(colorDistanceCalculator : IDistanceCalculator, colors : number = 256, method : number = 2) {\r\n\t\tthis._distance = colorDistanceCalculator;\r\n\t\t// desired final palette size\r\n\t\tthis._colors   = colors;\r\n\r\n\t\t// histogram to accumulate\r\n\t\tthis._histogram = new ColorHistogram(method, colors);\r\n\r\n\t\tthis._initialDistance   = 0.01;\r\n\t\tthis._distanceIncrement = 0.005;\r\n\t}\r\n\r\n\t// gathers histogram info\r\n\tsample(image : PointContainer) : void {\r\n\t\t/*\r\n\t\t var pointArray = image.getPointArray(), max = [0, 0, 0, 0], min = [255, 255, 255, 255];\r\n\r\n\t\t for (var i = 0, l = pointArray.length; i < l; i++) {\r\n\t\t var color = pointArray[i];\r\n\t\t for (var componentIndex = 0; componentIndex < 4; componentIndex++) {\r\n\t\t if (max[componentIndex] < color.rgba[componentIndex]) max[componentIndex] = color.rgba[componentIndex];\r\n\t\t if (min[componentIndex] > color.rgba[componentIndex]) min[componentIndex] = color.rgba[componentIndex];\r\n\t\t }\r\n\t\t }\r\n\t\t var rd = max[0] - min[0], gd = max[1] - min[1], bd = max[2] - min[2], ad = max[3] - min[3];\r\n\t\t this._distance.setWhitePoint(rd, gd, bd, ad);\r\n\r\n\t\t this._initialDistance = (Math.sqrt(rd * rd + gd * gd + bd * bd + ad * ad) / Math.sqrt(255 * 255 + 255 * 255 + 255 * 255)) * 0.01;\r\n\t\t */\r\n\r\n\t\tthis._histogram.sample(image);\r\n\t}\r\n\r\n\t// reduces histogram to palette, remaps & memoizes reduced colors\r\n\tquantize() : Palette {\r\n\t\tvar idxi32  = this._histogram.getImportanceSortedColorsIDXI32()\r\n\t\tif(!idxi32) {\r\n\t\t\tthrow new Error(\"No colors in image\")\r\n\t\t}\r\n\r\n\t\tvar palette = this._buildPalette(idxi32);\r\n\r\n\t\tpalette.sort();\r\n\t\treturn palette;\r\n\t}\r\n\r\n\t// reduces similar colors from an importance-sorted Uint32 rgba array\r\n\tprivate _buildPalette(idxi32 : number[]) : Palette {\r\n\t\t// reduce histogram to create initial palette\r\n\t\t// build full rgb palette\r\n\t\tvar palette    = new Palette(),\r\n\t\t\tcolorArray = palette.getPointContainer().getPointArray(),\r\n\t\t\tusageArray = new Array(idxi32.length);\r\n\r\n\t\tfor (var i = 0; i < idxi32.length; i++) {\r\n\t\t\tcolorArray.push(Point.createByUint32(idxi32[ i ]));\r\n\t\t\tusageArray[ i ] = 1;\r\n\t\t}\r\n\r\n\t\tvar len                      = colorArray.length,\r\n\t\t\tpalLen                   = len,\r\n\t\t\tthold                    = this._initialDistance,\r\n\t\t\tmemDist : RemovedColor[] = [];\r\n\r\n\t\t// palette already at or below desired length\r\n\t\twhile (palLen > this._colors) {\r\n\t\t\tmemDist.length = 0;\r\n\r\n\t\t\t// iterate palette\r\n\t\t\tfor (var i = 0; i < len; i++) {\r\n\t\t\t\tif (usageArray[ i ] === 0) continue;\r\n\t\t\t\tvar pxi = colorArray[ i ];\r\n\t\t\t\t//if (!pxi) continue;\r\n\r\n\t\t\t\tfor (var j = i + 1; j < len; j++) {\r\n\t\t\t\t\tif (usageArray[ j ] === 0) continue;\r\n\t\t\t\t\tvar pxj = colorArray[ j ];\r\n\t\t\t\t\t//if (!pxj) continue;\r\n\r\n\t\t\t\t\tvar dist = this._distance.calculateNormalized(pxi, pxj);\r\n\t\t\t\t\tif (dist < thold) {\r\n\t\t\t\t\t\t// store index,rgb,dist\r\n\t\t\t\t\t\tmemDist.push(new RemovedColor(j, pxj, dist));\r\n\t\t\t\t\t\tusageArray[ j ] = 0;\r\n\t\t\t\t\t\tpalLen--;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// palette reduction pass\r\n\t\t\t// console.log(\"palette length: \" + palLen);\r\n\r\n\t\t\t// if palette is still much larger than target, increment by larger initDist\r\n\t\t\tthold += (palLen > this._colors * 3) ? this._initialDistance : this._distanceIncrement;\r\n\t\t}\r\n\r\n\t\t// if palette is over-reduced, re-add removed colors with largest distances from last round\r\n\t\tif (palLen < this._colors) {\r\n\t\t\t// sort descending\r\n\t\t\tstableSort(memDist, function (a : RemovedColor, b : RemovedColor) {\r\n\t\t\t\treturn b.distance - a.distance;\r\n\t\t\t});\r\n\r\n\t\t\tvar k = 0;\r\n\t\t\twhile (palLen < this._colors && k < memDist.length) {\r\n\t\t\t\tvar removedColor                 = memDist[ k ];\r\n\t\t\t\t// re-inject rgb into final palette\r\n\t\t\t\tusageArray[ removedColor.index ] = 1;\r\n\t\t\t\tpalLen++;\r\n\t\t\t\tk++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar colors = colorArray.length;\r\n\t\tfor (var colorIndex = colors - 1; colorIndex >= 0; colorIndex--) {\r\n\t\t\tif (usageArray[ colorIndex ] === 0) {\r\n\t\t\t\tif (colorIndex !== colors - 1) {\r\n\t\t\t\t\tcolorArray[ colorIndex ] = colorArray[ colors - 1 ];\r\n\t\t\t\t}\r\n\t\t\t\t--colors;\r\n\t\t\t}\r\n\t\t}\r\n\t\tcolorArray.length = colors;\r\n\r\n\t\treturn palette;\r\n\t}\r\n\r\n}\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/palette/rgbquant/rgbquant.ts\n **/","/*\r\n * Copyright (c) 2015, Leon Sorokin\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * ColorHistogram.js - an image quantization lib\r\n */\r\n\r\n/**\r\n * @preserve TypeScript port:\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * colorHistogram.ts - part of Image Quantization Library\r\n */\r\nimport {HueStatistics} from \"../../utils/hueStatistics\"\r\nimport {PointContainer} from \"../../utils/pointContainer\"\r\nimport {stableSort} from \"../../utils/arithmetic\"\r\n\r\ninterface Box {\r\n\tx : number,\r\n\ty : number,\r\n\th : number,\r\n\tw : number\r\n}\r\n\r\nexport class ColorHistogram {\r\n\tprivate static _boxSize   = [ 64, 64 ];\r\n\tprivate static _boxPixels = 2;\r\n\tprivate static _hueGroups = 10;\r\n\r\n\t// 1 = by global population, 2 = subregion population threshold\r\n\tprivate _method : number;\r\n\r\n\t// HueStatistics instance\r\n\tprivate _hueStats : HueStatistics;\r\n\r\n\tprivate _histogram : {[color : string] : number};\r\n\r\n\t// # of highest-frequency colors to start with for palette reduction\r\n\tprivate _initColors : number;\r\n\r\n\t// if > 0, enables hues stats and min-color retention per group\r\n\tprivate _minHueCols : number;\r\n\r\n\tconstructor(method : number, colors : number) {\r\n\t\t// 1 = by global population, 2 = subregion population threshold\r\n\t\tthis._method = method;\r\n\r\n\t\t// if > 0, enables hues stats and min-color retention per group\r\n\t\tthis._minHueCols = colors << 2;//opts.minHueCols || 0;\r\n\r\n\t\t// # of highest-frequency colors to start with for palette reduction\r\n\t\tthis._initColors = colors << 2;\r\n\r\n\t\t// HueStatistics instance\r\n\t\tthis._hueStats = new HueStatistics(ColorHistogram._hueGroups, this._minHueCols);\r\n\r\n\t\tthis._histogram = Object.create(null);\r\n\t}\r\n\r\n\tsample(pointBuffer : PointContainer) : void {\r\n\t\tswitch (this._method) {\r\n\t\t\tcase 1:\r\n\t\t\t\tthis._colorStats1D(pointBuffer);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tthis._colorStats2D(pointBuffer);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tgetImportanceSortedColorsIDXI32() {\r\n\t\t// TODO: fix typing issue in stableSort func\r\n\t\tvar sorted : number[] = <any>stableSort(Object.keys(this._histogram), (a, b) => this._histogram[ b ] - this._histogram[ a ]);\r\n\t\t//var sorted = Object.keys(this._histogram).sort((a, b) => this._histogram[b] - this._histogram[a]);\r\n\t\t//var sorted = Utils.sortedHashKeys(this._histogram, true);\r\n\r\n\t\t// TODO: check that other code waits for null\r\n\t\tif (sorted.length == 0) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tswitch (this._method) {\r\n\t\t\tcase 1:\r\n\t\t\t\tvar initialColorsLimit = Math.min(sorted.length, this._initColors),\r\n\t\t\t\t\tlast               = sorted[ initialColorsLimit - 1 ],\r\n\t\t\t\t\tfreq               = this._histogram[ last ];\r\n\r\n\t\t\t\tvar idxi32 = sorted.slice(0, initialColorsLimit);\r\n\r\n\t\t\t\t// add any cut off colors with same freq as last\r\n\t\t\t\tvar pos = initialColorsLimit, len = sorted.length;\r\n\t\t\t\twhile (pos < len && this._histogram[ sorted[ pos ] ] == freq)\r\n\t\t\t\t\tidxi32.push(sorted[ pos++ ]);\r\n\r\n\t\t\t\t// inject min huegroup colors\r\n\t\t\t\tthis._hueStats.injectIntoArray(idxi32);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 2:\r\n\t\t\t\tvar idxi32 = sorted;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\t// TODO: rethink errors\r\n\t\t\t\tthrow new Error(\"Incorrect method\")\r\n\t\t}\r\n\r\n\t\t// int32-ify values\r\n\t\treturn idxi32.map(function (v) {\r\n\t\t\treturn +v;\r\n\t\t});\r\n\t}\r\n\r\n\t// global top-population\r\n\tprivate _colorStats1D(pointBuffer : PointContainer) {\r\n\t\tvar histG      = this._histogram,\r\n\t\t\tpointArray = pointBuffer.getPointArray(),\r\n\t\t\tlen        = pointArray.length;\r\n\r\n\t\tfor (var i = 0; i < len; i++) {\r\n\t\t\tvar col = pointArray[ i ].uint32;\r\n\r\n\t\t\t// collect hue stats\r\n\t\t\tthis._hueStats.check(col);\r\n\r\n\t\t\tif (col in histG)\r\n\t\t\t\thistG[ col ]++;\r\n\t\t\telse\r\n\t\t\t\thistG[ col ] = 1;\r\n\t\t}\r\n\t}\r\n\r\n\t// population threshold within subregions\r\n\t// FIXME: this can over-reduce (few/no colors same?), need a way to keep\r\n\t// important colors that dont ever reach local thresholds (gradients?)\r\n\tprivate _colorStats2D(pointBuffer : PointContainer) {\r\n\t\tvar width      = pointBuffer.getWidth(),\r\n\t\t\theight     = pointBuffer.getHeight(),\r\n\t\t\tpointArray = pointBuffer.getPointArray();\r\n\r\n\t\tvar boxW  = ColorHistogram._boxSize[ 0 ],\r\n\t\t\tboxH  = ColorHistogram._boxSize[ 1 ],\r\n\t\t\tarea  = boxW * boxH,\r\n\t\t\tboxes = this._makeBoxes(width, height, boxW, boxH),\r\n\t\t\thistG = this._histogram;\r\n\r\n\t\tboxes.forEach(box => {\r\n\t\t\tvar effc                                = Math.round((box.w * box.h) / area) * ColorHistogram._boxPixels,\r\n\t\t\t\thistL : { [key : string ] : number} = {},\r\n\t\t\t\tcol : number;\r\n\r\n\t\t\tif (effc < 2) effc = 2;\r\n\r\n\t\t\tthis._iterateBox(box, width, (i : number) => {\r\n\t\t\t\tcol = pointArray[ i ].uint32;\r\n\r\n\t\t\t\t// collect hue stats\r\n\t\t\t\tthis._hueStats.check(col);\r\n\r\n\t\t\t\tif (col in histG)\r\n\t\t\t\t\thistG[ col ]++;\r\n\t\t\t\telse if (col in histL) {\r\n\t\t\t\t\tif (++histL[ col ] >= effc)\r\n\t\t\t\t\t\thistG[ col ] = histL[ col ];\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t\thistL[ col ] = 1;\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\t// inject min huegroup colors\r\n\t\tthis._hueStats.injectIntoDictionary(histG);\r\n\r\n\t}\r\n\r\n\t// iterates @bbox within a parent rect of width @wid; calls @fn, passing index within parent\r\n\tprivate _iterateBox(bbox : Box, wid : number, fn : Function) {\r\n\t\tvar b                                = bbox,\r\n\t\t\ti0                               = b.y * wid + b.x,\r\n\t\t\ti1                               = (b.y + b.h - 1) * wid + (b.x + b.w - 1),\r\n\t\t\tcnt = 0, incr = wid - b.w + 1, i = i0;\r\n\r\n\t\tdo {\r\n\t\t\tfn.call(this, i);\r\n\t\t\ti += (++cnt % b.w == 0) ? incr : 1;\r\n\t\t} while (i <= i1);\r\n\t}\r\n\r\n\t/**\r\n\t *    partitions a rectangle of width x height into\r\n\t *    array of boxes stepX x stepY (or less)\r\n\t */\r\n\tprivate _makeBoxes(width : number, height : number, stepX : number, stepY : number) {\r\n\t\tvar wrem = width % stepX,\r\n\t\t\threm = height % stepY,\r\n\t\t\txend = width - wrem,\r\n\t\t\tyend = height - hrem;\r\n\r\n\t\tvar boxesArray : Box[] = [];\r\n\t\tfor (var y = 0; y < height; y += stepY)\r\n\t\t\tfor (var x = 0; x < width; x += stepX)\r\n\t\t\t\tboxesArray.push({ x : x, y : y, w : (x == xend ? wrem : stepX), h : (y == yend ? hrem : stepY) });\r\n\r\n\t\treturn boxesArray;\r\n\t}\r\n\r\n}\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/palette/rgbquant/colorHistogram.ts\n **/","/**\r\n * @preserve\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * hueStatistics.ts - part of Image Quantization Library\r\n */\r\nimport {rgb2hsl} from \"../conversion/rgb2hsl\"\r\nimport { hueGroup } from \"./palette\"\r\n\r\nclass HueGroup {\r\n\tnum : number    = 0;\r\n\tcols : number[] = [];\r\n}\r\n\r\nexport class HueStatistics {\r\n\tprivate _numGroups : number;\r\n\tprivate _minCols : number;\r\n\tprivate _stats : HueGroup[];\r\n\tprivate _groupsFull : number;\r\n\r\n\tconstructor(numGroups : number, minCols : number) {\r\n\t\tthis._numGroups = numGroups;\r\n\t\tthis._minCols   = minCols;\r\n\t\tthis._stats     = [];\r\n\r\n\t\tfor (var i = 0; i <= numGroups; i++) {\r\n\t\t\tthis._stats[ i ] = new HueGroup();\r\n\t\t}\r\n\r\n\t\tthis._groupsFull = 0;\r\n\t}\r\n\r\n\tcheck(i32 : number) {\r\n\t\tif (this._groupsFull == this._numGroups + 1) {\r\n\t\t\tthis.check = function () {\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tvar r   = (i32 & 0xff),\r\n\t\t\tg   = (i32 >>> 8) & 0xff,\r\n\t\t\tb   = (i32 >>> 16) & 0xff,\r\n\t\t\thg  = (r == g && g == b) ? 0 : 1 + hueGroup(rgb2hsl(r, g, b).h, this._numGroups),\r\n\t\t\tgr  = this._stats[ hg ],\r\n\t\t\tmin = this._minCols;\r\n\r\n\t\tgr.num++;\r\n\r\n\t\tif (gr.num > min)\r\n\t\t\treturn;\r\n\t\tif (gr.num == min)\r\n\t\t\tthis._groupsFull++;\r\n\r\n\t\tif (gr.num <= min)\r\n\t\t\tthis._stats[ hg ].cols.push(i32);\r\n\t}\r\n\r\n\tinjectIntoDictionary(histG : { [key : string ] : number}) {\r\n\t\tfor (var i = 0; i <= this._numGroups; i++) {\r\n\t\t\tif (this._stats[ i ].num <= this._minCols) {\r\n\t\t\t\tthis._stats[ i ].cols.forEach((col : number) => {\r\n\t\t\t\t\tif (!histG[ col ])\r\n\t\t\t\t\t\thistG[ col ] = 1;\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\thistG[ col ]++;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tinjectIntoArray(histG : number[]) {\r\n\t\tfor (var i = 0; i <= this._numGroups; i++) {\r\n\t\t\tif (this._stats[ i ].num <= this._minCols) {\r\n\t\t\t\tthis._stats[ i ].cols.forEach((col : number) => {\r\n\t\t\t\t\tif (histG.indexOf(col) == -1)\r\n\t\t\t\t\t\thistG.push(col);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/utils/hueStatistics.ts\n **/","/**\r\n * @preserve\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * wuQuant.ts - part of Image Quantization Library\r\n */\r\nimport {Palette} from \"../../utils/palette\"\r\nimport {Point} from \"../../utils/point\"\r\nimport {PointContainer} from \"../../utils/pointContainer\"\r\nimport {IDistanceCalculator} from \"../../distance/common\"\r\n\r\nfunction createArray1D(dimension1 : number) {\r\n\tvar a : number[] = [];\r\n\tfor (var k = 0; k < dimension1; k++) {\r\n\t\ta[ k ] = 0;\r\n\t}\r\n\treturn a;\r\n}\r\n\r\nfunction createArray4D(dimension1 : number, dimension2 : number, dimension3 : number, dimension4 : number) : number[][][][] {\r\n\tvar a = new Array(dimension1);\r\n\tfor (var i = 0; i < dimension1; i++) {\r\n\t\ta[ i ] = new Array(dimension2);\r\n\t\tfor (var j = 0; j < dimension2; j++) {\r\n\t\t\ta[ i ][ j ] = new Array(dimension3);\r\n\t\t\tfor (var k = 0; k < dimension3; k++) {\r\n\t\t\t\ta[ i ][ j ][ k ] = new Array(dimension4);\r\n\t\t\t\tfor (var l = 0; l < dimension4; l++) {\r\n\t\t\t\t\ta[ i ][ j ][ k ][ l ] = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn a;\r\n}\r\n\r\nfunction createArray3D(dimension1 : number, dimension2 : number, dimension3 : number) : number[][][] {\r\n\tvar a = new Array(dimension1);\r\n\tfor (var i = 0; i < dimension1; i++) {\r\n\t\ta[ i ] = new Array(dimension2);\r\n\t\tfor (var j = 0; j < dimension2; j++) {\r\n\t\t\ta[ i ][ j ] = new Array(dimension3);\r\n\t\t\tfor (var k = 0; k < dimension3; k++) {\r\n\t\t\t\ta[ i ][ j ][ k ] = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn a;\r\n}\r\n\r\nfunction fillArray3D<T>(a : T[][][], dimension1 : number, dimension2 : number, dimension3 : number, value : T) : void {\r\n\tfor (var i = 0; i < dimension1; i++) {\r\n\t\ta[ i ] = [];\r\n\t\tfor (var j = 0; j < dimension2; j++) {\r\n\t\t\ta[ i ][ j ] = [];\r\n\t\t\tfor (var k = 0; k < dimension3; k++) {\r\n\t\t\t\ta[ i ][ j ][ k ] = value;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction fillArray1D<T>(a : T[], dimension1 : number, value : T) : void {\r\n\tfor (var i = 0; i < dimension1; i++) {\r\n\t\ta[ i ] = value;\r\n\t}\r\n}\r\n\r\nexport class WuColorCube {\r\n\tredMinimum : number;\r\n\tredMaximum : number;\r\n\tgreenMinimum : number;\r\n\tgreenMaximum : number;\r\n\tblueMinimum : number;\r\n\tblueMaximum : number;\r\n\tvolume : number;\r\n\talphaMinimum : number;\r\n\talphaMaximum : number;\r\n}\r\n\r\nexport class WuQuant {\r\n\r\n\tprivate static alpha = 3;\r\n\tprivate static red   = 2;\r\n\tprivate static green = 1;\r\n\tprivate static blue  = 0;\r\n\r\n\tprivate _reds : number[];\r\n\tprivate _greens : number[];\r\n\tprivate _blues : number[];\r\n\tprivate _alphas : number[];\r\n\tprivate _sums : number[];\r\n\r\n\tprivate _weights : number[][][][];\r\n\tprivate _momentsRed : number[][][][];\r\n\tprivate _momentsGreen : number[][][][];\r\n\tprivate _momentsBlue : number[][][][];\r\n\tprivate _momentsAlpha : number[][][][];\r\n\tprivate _moments : number[][][][];\r\n\r\n\tprivate _table : number[];\r\n\tprivate _pixels : Point[];\r\n\r\n\tprivate _cubes : WuColorCube[];\r\n\tprivate _colors : number;\r\n\r\n\tprivate _significantBitsPerChannel : number;\r\n\tprivate _maxSideIndex : number;\r\n\tprivate _alphaMaxSideIndex : number;\r\n\tprivate _sideSize : number;\r\n\tprivate _alphaSideSize : number;\r\n\r\n\tprivate _distance : IDistanceCalculator;\r\n\r\n\tconstructor(colorDistanceCalculator : IDistanceCalculator, colors : number = 256, significantBitsPerChannel : number = 5) {\r\n\t\tthis._distance = colorDistanceCalculator;\r\n\t\tthis._setQuality(significantBitsPerChannel);\r\n\t\tthis._initialize(colors);\r\n\t}\r\n\r\n\tsample(image : PointContainer) : void {\r\n\t\tvar pointArray = image.getPointArray();\r\n\r\n\t\tfor (var i = 0, l = pointArray.length; i < l; i++) {\r\n\t\t\tthis._addColor(pointArray[ i ]);\r\n\t\t}\r\n\r\n\t\tthis._pixels = this._pixels.concat(pointArray);\r\n\t}\r\n\r\n\tquantize() : Palette {\r\n\t\tthis._preparePalette();\r\n\r\n\t\tvar palette : Palette = new Palette();\r\n\r\n\t\t// generates palette\r\n\t\tfor (var paletteIndex = 0; paletteIndex < this._colors; paletteIndex++) {\r\n\t\t\tif (this._sums[ paletteIndex ] > 0) {\r\n\t\t\t\tvar sum = this._sums[ paletteIndex ],\r\n\t\t\t\t\tr   = this._reds[ paletteIndex ] / sum,\r\n\t\t\t\t\tg   = this._greens[ paletteIndex ] / sum,\r\n\t\t\t\t\tb   = this._blues[ paletteIndex ] / sum,\r\n\t\t\t\t\ta   = this._alphas[ paletteIndex ] / sum;\r\n\r\n\t\t\t\tvar color = Point.createByRGBA(r | 0, g | 0, b | 0, a | 0);\r\n\t\t\t\tpalette.add(color);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tpalette.sort();\r\n\t\treturn palette;\r\n\t}\r\n\r\n\tprivate _preparePalette() : void {\r\n\t\tvar l : number;\r\n\t\t// preprocess the colors\r\n\t\tthis._calculateMoments();\r\n\r\n\t\tvar next           = 0,\r\n\t\t\tvolumeVariance = createArray1D(this._colors);\r\n\r\n\t\t// processes the cubes\r\n\t\tfor (var cubeIndex = 1; cubeIndex < this._colors; ++cubeIndex) {\r\n\t\t\t// if cut is possible; make it\r\n\t\t\tif (this._cut(this._cubes[ next ], this._cubes[ cubeIndex ])) {\r\n\t\t\t\tvolumeVariance[ next ]      = this._cubes[ next ].volume > 1 ? this._calculateVariance(this._cubes[ next ]) : 0.0;\r\n\t\t\t\tvolumeVariance[ cubeIndex ] = this._cubes[ cubeIndex ].volume > 1 ? this._calculateVariance(this._cubes[ cubeIndex ]) : 0.0;\r\n\t\t\t} else {\r\n\t\t\t\t// the cut was not possible, revert the index\r\n\t\t\t\tvolumeVariance[ next ] = 0.0;\r\n\t\t\t\tcubeIndex--;\r\n\t\t\t}\r\n\r\n\t\t\tnext     = 0;\r\n\t\t\tvar temp = volumeVariance[ 0 ];\r\n\r\n\t\t\tfor (var index = 1; index <= cubeIndex; ++index) {\r\n\t\t\t\tif (volumeVariance[ index ] > temp) {\r\n\t\t\t\t\ttemp = volumeVariance[ index ];\r\n\t\t\t\t\tnext = index;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (temp <= 0.0) {\r\n\t\t\t\tthis._colors = cubeIndex + 1;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar lookupRed : number[]   = [],\r\n\t\t\tlookupGreen : number[] = [],\r\n\t\t\tlookupBlue : number[]  = [],\r\n\t\t\tlookupAlpha : number[] = [];\r\n\r\n\t\t// precalculates lookup tables\r\n\t\tfor (var k = 0; k < this._colors; ++k) {\r\n\r\n\t\t\tvar weight = WuQuant._volume(this._cubes[ k ], this._weights);\r\n\r\n\t\t\tif (weight > 0) {\r\n\t\t\t\tlookupRed[ k ]   = (WuQuant._volume(this._cubes[ k ], this._momentsRed) / weight) | 0;\r\n\t\t\t\tlookupGreen[ k ] = (WuQuant._volume(this._cubes[ k ], this._momentsGreen) / weight) | 0;\r\n\t\t\t\tlookupBlue[ k ]  = (WuQuant._volume(this._cubes[ k ], this._momentsBlue) / weight) | 0;\r\n\t\t\t\tlookupAlpha[ k ] = (WuQuant._volume(this._cubes[ k ], this._momentsAlpha) / weight) | 0;\r\n\t\t\t} else {\r\n\t\t\t\tlookupRed[ k ]   = 0;\r\n\t\t\t\tlookupGreen[ k ] = 0;\r\n\t\t\t\tlookupBlue[ k ]  = 0;\r\n\t\t\t\tlookupAlpha[ k ] = 0;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._reds   = createArray1D(this._colors + 1);\r\n\t\tthis._greens = createArray1D(this._colors + 1);\r\n\t\tthis._blues  = createArray1D(this._colors + 1);\r\n\t\tthis._alphas = createArray1D(this._colors + 1);\r\n\t\tthis._sums   = createArray1D(this._colors + 1);\r\n\r\n\t\t// scans and adds colors\r\n\t\tfor (var index = 0, l = this._pixels.length; index < l; index++) {\r\n\t\t\tvar color : Point = this._pixels[ index ];\r\n\r\n\t\t\tvar match        = -1,\r\n\t\t\t\tbestMatch    = match,\r\n\t\t\t\tbestDistance = Number.MAX_VALUE;\r\n\r\n\t\t\tfor (var lookup = 0; lookup < this._colors; lookup++) {\r\n\t\t\t\tvar foundRed   = lookupRed[ lookup ],\r\n\t\t\t\t\tfoundGreen = lookupGreen[ lookup ],\r\n\t\t\t\t\tfoundBlue  = lookupBlue[ lookup ],\r\n\t\t\t\t\tfoundAlpha = lookupAlpha[ lookup ];\r\n\r\n\t\t\t\tvar distance = this._distance.calculateRaw(foundRed, foundGreen, foundBlue, foundAlpha, color.r, color.g, color.b, color.a);\r\n\t\t\t\t//var distance = this._distance.calculateRaw(Utils.Point.createByRGBA(foundRed, foundGreen, foundBlue, foundAlpha), color);\r\n\t\t\t\t//deltaRed   = color.r - foundRed,\r\n\t\t\t\t//deltaGreen = color.g - foundGreen,\r\n\t\t\t\t//deltaBlue  = color.b - foundBlue,\r\n\t\t\t\t//deltaAlpha = color.a - foundAlpha,\r\n\r\n\t\t\t\t//distance   = deltaRed * deltaRed + deltaGreen * deltaGreen + deltaBlue * deltaBlue + deltaAlpha * deltaAlpha;\r\n\r\n\t\t\t\tif (distance < bestDistance) {\r\n\t\t\t\t\tbestDistance = distance;\r\n\t\t\t\t\tbestMatch    = lookup;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._reds[ bestMatch ] += color.r;\r\n\t\t\tthis._greens[ bestMatch ] += color.g;\r\n\t\t\tthis._blues[ bestMatch ] += color.b;\r\n\t\t\tthis._alphas[ bestMatch ] += color.a;\r\n\t\t\tthis._sums[ bestMatch ]++;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _addColor(color : Point) : void {\r\n\t\tvar bitsToRemove = 8 - this._significantBitsPerChannel,\r\n\t\t\tindexRed     = (color.r >> bitsToRemove) + 1,\r\n\t\t\tindexGreen   = (color.g >> bitsToRemove) + 1,\r\n\t\t\tindexBlue    = (color.b >> bitsToRemove) + 1,\r\n\t\t\tindexAlpha   = (color.a >> bitsToRemove) + 1;\r\n\r\n\t\t//if(color.a > 10) {\r\n\t\tthis._weights[ indexAlpha ][ indexRed ][ indexGreen ][ indexBlue ]++;\r\n\t\tthis._momentsRed[ indexAlpha ][ indexRed ][ indexGreen ][ indexBlue ] += color.r;\r\n\t\tthis._momentsGreen[ indexAlpha ][ indexRed ][ indexGreen ][ indexBlue ] += color.g;\r\n\t\tthis._momentsBlue[ indexAlpha ][ indexRed ][ indexGreen ][ indexBlue ] += color.b;\r\n\t\tthis._momentsAlpha[ indexAlpha ][ indexRed ][ indexGreen ][ indexBlue ] += color.a;\r\n\t\tthis._moments[ indexAlpha ][ indexRed ][ indexGreen ][ indexBlue ] += this._table[ color.r ] + this._table[ color.g ] + this._table[ color.b ] + this._table[ color.a ];\r\n//\t\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the histogram to a series of _moments.\r\n\t */\r\n\tprivate _calculateMoments() : void {\r\n\t\tvar area : number[]      = [],\r\n\t\t\tareaRed : number[]   = [],\r\n\t\t\tareaGreen : number[] = [],\r\n\t\t\tareaBlue : number[]  = [],\r\n\t\t\tareaAlpha : number[] = [],\r\n\t\t\tarea2 : number[]     = [];\r\n\r\n\t\tvar xarea : number[][][]      = createArray3D(this._sideSize, this._sideSize, this._sideSize),\r\n\t\t\txareaRed : number[][][]   = createArray3D(this._sideSize, this._sideSize, this._sideSize),\r\n\t\t\txareaGreen : number[][][] = createArray3D(this._sideSize, this._sideSize, this._sideSize),\r\n\t\t\txareaBlue : number[][][]  = createArray3D(this._sideSize, this._sideSize, this._sideSize),\r\n\t\t\txareaAlpha : number[][][] = createArray3D(this._sideSize, this._sideSize, this._sideSize),\r\n\t\t\txarea2 : number[][][]     = createArray3D(this._sideSize, this._sideSize, this._sideSize);\r\n\r\n\t\tfor (var alphaIndex = 1; alphaIndex <= this._alphaMaxSideIndex; ++alphaIndex) {\r\n\t\t\tfillArray3D<number>(xarea, this._sideSize, this._sideSize, this._sideSize, 0);\r\n\t\t\tfillArray3D<number>(xareaRed, this._sideSize, this._sideSize, this._sideSize, 0);\r\n\t\t\tfillArray3D<number>(xareaGreen, this._sideSize, this._sideSize, this._sideSize, 0);\r\n\t\t\tfillArray3D<number>(xareaBlue, this._sideSize, this._sideSize, this._sideSize, 0);\r\n\t\t\tfillArray3D<number>(xareaAlpha, this._sideSize, this._sideSize, this._sideSize, 0);\r\n\t\t\tfillArray3D<number>(xarea2, this._sideSize, this._sideSize, this._sideSize, 0);\r\n\r\n\t\t\tfor (var redIndex = 1; redIndex <= this._maxSideIndex; ++redIndex) {\r\n\t\t\t\tfillArray1D<number>(area, this._sideSize, 0);\r\n\t\t\t\tfillArray1D<number>(areaRed, this._sideSize, 0);\r\n\t\t\t\tfillArray1D<number>(areaGreen, this._sideSize, 0);\r\n\t\t\t\tfillArray1D<number>(areaBlue, this._sideSize, 0);\r\n\t\t\t\tfillArray1D<number>(areaAlpha, this._sideSize, 0);\r\n\t\t\t\tfillArray1D<number>(area2, this._sideSize, 0);\r\n\r\n\t\t\t\tfor (var greenIndex = 1; greenIndex <= this._maxSideIndex; ++greenIndex) {\r\n\t\t\t\t\tvar line      = 0,\r\n\t\t\t\t\t\tlineRed   = 0,\r\n\t\t\t\t\t\tlineGreen = 0,\r\n\t\t\t\t\t\tlineBlue  = 0,\r\n\t\t\t\t\t\tlineAlpha = 0,\r\n\t\t\t\t\t\tline2     = 0.0;\r\n\r\n\t\t\t\t\tfor (var blueIndex = 1; blueIndex <= this._maxSideIndex; ++blueIndex) {\r\n\t\t\t\t\t\tline += this._weights[ alphaIndex ][ redIndex ][ greenIndex ][ blueIndex ];\r\n\t\t\t\t\t\tlineRed += this._momentsRed[ alphaIndex ][ redIndex ][ greenIndex ][ blueIndex ];\r\n\t\t\t\t\t\tlineGreen += this._momentsGreen[ alphaIndex ][ redIndex ][ greenIndex ][ blueIndex ];\r\n\t\t\t\t\t\tlineBlue += this._momentsBlue[ alphaIndex ][ redIndex ][ greenIndex ][ blueIndex ];\r\n\t\t\t\t\t\tlineAlpha += this._momentsAlpha[ alphaIndex ][ redIndex ][ greenIndex ][ blueIndex ];\r\n\t\t\t\t\t\tline2 += this._moments[ alphaIndex ][ redIndex ][ greenIndex ][ blueIndex ];\r\n\r\n\t\t\t\t\t\tarea[ blueIndex ] += line;\r\n\t\t\t\t\t\tareaRed[ blueIndex ] += lineRed;\r\n\t\t\t\t\t\tareaGreen[ blueIndex ] += lineGreen;\r\n\t\t\t\t\t\tareaBlue[ blueIndex ] += lineBlue;\r\n\t\t\t\t\t\tareaAlpha[ blueIndex ] += lineAlpha;\r\n\t\t\t\t\t\tarea2[ blueIndex ] += line2;\r\n\r\n\t\t\t\t\t\txarea[ redIndex ][ greenIndex ][ blueIndex ]      = xarea[ redIndex - 1 ][ greenIndex ][ blueIndex ] + area[ blueIndex ];\r\n\t\t\t\t\t\txareaRed[ redIndex ][ greenIndex ][ blueIndex ]   = xareaRed[ redIndex - 1 ][ greenIndex ][ blueIndex ] + areaRed[ blueIndex ];\r\n\t\t\t\t\t\txareaGreen[ redIndex ][ greenIndex ][ blueIndex ] = xareaGreen[ redIndex - 1 ][ greenIndex ][ blueIndex ] + areaGreen[ blueIndex ];\r\n\t\t\t\t\t\txareaBlue[ redIndex ][ greenIndex ][ blueIndex ]  = xareaBlue[ redIndex - 1 ][ greenIndex ][ blueIndex ] + areaBlue[ blueIndex ];\r\n\t\t\t\t\t\txareaAlpha[ redIndex ][ greenIndex ][ blueIndex ] = xareaAlpha[ redIndex - 1 ][ greenIndex ][ blueIndex ] + areaAlpha[ blueIndex ];\r\n\t\t\t\t\t\txarea2[ redIndex ][ greenIndex ][ blueIndex ]     = xarea2[ redIndex - 1 ][ greenIndex ][ blueIndex ] + area2[ blueIndex ];\r\n\r\n\t\t\t\t\t\tthis._weights[ alphaIndex ][ redIndex ][ greenIndex ][ blueIndex ]      = this._weights[ alphaIndex - 1 ][ redIndex ][ greenIndex ][ blueIndex ] + xarea[ redIndex ][ greenIndex ][ blueIndex ];\r\n\t\t\t\t\t\tthis._momentsRed[ alphaIndex ][ redIndex ][ greenIndex ][ blueIndex ]   = this._momentsRed[ alphaIndex - 1 ][ redIndex ][ greenIndex ][ blueIndex ] + xareaRed[ redIndex ][ greenIndex ][ blueIndex ];\r\n\t\t\t\t\t\tthis._momentsGreen[ alphaIndex ][ redIndex ][ greenIndex ][ blueIndex ] = this._momentsGreen[ alphaIndex - 1 ][ redIndex ][ greenIndex ][ blueIndex ] + xareaGreen[ redIndex ][ greenIndex ][ blueIndex ];\r\n\t\t\t\t\t\tthis._momentsBlue[ alphaIndex ][ redIndex ][ greenIndex ][ blueIndex ]  = this._momentsBlue[ alphaIndex - 1 ][ redIndex ][ greenIndex ][ blueIndex ] + xareaBlue[ redIndex ][ greenIndex ][ blueIndex ];\r\n\t\t\t\t\t\tthis._momentsAlpha[ alphaIndex ][ redIndex ][ greenIndex ][ blueIndex ] = this._momentsAlpha[ alphaIndex - 1 ][ redIndex ][ greenIndex ][ blueIndex ] + xareaAlpha[ redIndex ][ greenIndex ][ blueIndex ];\r\n\t\t\t\t\t\tthis._moments[ alphaIndex ][ redIndex ][ greenIndex ][ blueIndex ]      = this._moments[ alphaIndex - 1 ][ redIndex ][ greenIndex ][ blueIndex ] + xarea2[ redIndex ][ greenIndex ][ blueIndex ];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Computes the volume of the cube in a specific moment.\r\n\t */\r\n\tprivate static _volumeFloat(cube : WuColorCube, moment : number[][][][]) : number {\r\n\t\treturn (moment[ cube.alphaMaximum ][ cube.redMaximum ][ cube.greenMaximum ][ cube.blueMaximum ] -\r\n\t\t\tmoment[ cube.alphaMaximum ][ cube.redMaximum ][ cube.greenMinimum ][ cube.blueMaximum ] -\r\n\t\t\tmoment[ cube.alphaMaximum ][ cube.redMinimum ][ cube.greenMaximum ][ cube.blueMaximum ] +\r\n\t\t\tmoment[ cube.alphaMaximum ][ cube.redMinimum ][ cube.greenMinimum ][ cube.blueMaximum ] -\r\n\t\t\tmoment[ cube.alphaMinimum ][ cube.redMaximum ][ cube.greenMaximum ][ cube.blueMaximum ] +\r\n\t\t\tmoment[ cube.alphaMinimum ][ cube.redMaximum ][ cube.greenMinimum ][ cube.blueMaximum ] +\r\n\t\t\tmoment[ cube.alphaMinimum ][ cube.redMinimum ][ cube.greenMaximum ][ cube.blueMaximum ] -\r\n\t\t\tmoment[ cube.alphaMinimum ][ cube.redMinimum ][ cube.greenMinimum ][ cube.blueMaximum ]) -\r\n\r\n\t\t\t(moment[ cube.alphaMaximum ][ cube.redMaximum ][ cube.greenMaximum ][ cube.blueMinimum ] -\r\n\t\t\tmoment[ cube.alphaMinimum ][ cube.redMaximum ][ cube.greenMaximum ][ cube.blueMinimum ] -\r\n\t\t\tmoment[ cube.alphaMaximum ][ cube.redMaximum ][ cube.greenMinimum ][ cube.blueMinimum ] +\r\n\t\t\tmoment[ cube.alphaMinimum ][ cube.redMaximum ][ cube.greenMinimum ][ cube.blueMinimum ] -\r\n\t\t\tmoment[ cube.alphaMaximum ][ cube.redMinimum ][ cube.greenMaximum ][ cube.blueMinimum ] +\r\n\t\t\tmoment[ cube.alphaMinimum ][ cube.redMinimum ][ cube.greenMaximum ][ cube.blueMinimum ] +\r\n\t\t\tmoment[ cube.alphaMaximum ][ cube.redMinimum ][ cube.greenMinimum ][ cube.blueMinimum ] -\r\n\t\t\tmoment[ cube.alphaMinimum ][ cube.redMinimum ][ cube.greenMinimum ][ cube.blueMinimum ]);\r\n\t}\r\n\r\n\t/**\r\n\t * Computes the volume of the cube in a specific moment.\r\n\t */\r\n\tprivate static _volume(cube : WuColorCube, moment : number[][][][]) : number {\r\n\t\treturn WuQuant._volumeFloat(cube, moment) | 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Splits the cube in given position][and color direction.\r\n\t */\r\n\tprivate static _top(cube : WuColorCube, direction : number, position : number, moment : number[][][][]) : number {\r\n\t\tvar result : number;\r\n\t\tswitch (direction) {\r\n\t\t\tcase WuQuant.alpha:\r\n\t\t\t\tresult = (moment[ position ][ cube.redMaximum ][ cube.greenMaximum ][ cube.blueMaximum ] -\r\n\t\t\t\t\tmoment[ position ][ cube.redMaximum ][ cube.greenMinimum ][ cube.blueMaximum ] -\r\n\t\t\t\t\tmoment[ position ][ cube.redMinimum ][ cube.greenMaximum ][ cube.blueMaximum ] +\r\n\t\t\t\t\tmoment[ position ][ cube.redMinimum ][ cube.greenMinimum ][ cube.blueMaximum ]) -\r\n\t\t\t\t\t(moment[ position ][ cube.redMaximum ][ cube.greenMaximum ][ cube.blueMinimum ] -\r\n\t\t\t\t\tmoment[ position ][ cube.redMaximum ][ cube.greenMinimum ][ cube.blueMinimum ] -\r\n\t\t\t\t\tmoment[ position ][ cube.redMinimum ][ cube.greenMaximum ][ cube.blueMinimum ] +\r\n\t\t\t\t\tmoment[ position ][ cube.redMinimum ][ cube.greenMinimum ][ cube.blueMinimum ]);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase WuQuant.red:\r\n\t\t\t\tresult = (moment[ cube.alphaMaximum ][ position ][ cube.greenMaximum ][ cube.blueMaximum ] -\r\n\t\t\t\t\tmoment[ cube.alphaMaximum ][ position ][ cube.greenMinimum ][ cube.blueMaximum ] -\r\n\t\t\t\t\tmoment[ cube.alphaMinimum ][ position ][ cube.greenMaximum ][ cube.blueMaximum ] +\r\n\t\t\t\t\tmoment[ cube.alphaMinimum ][ position ][ cube.greenMinimum ][ cube.blueMaximum ]) -\r\n\t\t\t\t\t(moment[ cube.alphaMaximum ][ position ][ cube.greenMaximum ][ cube.blueMinimum ] -\r\n\t\t\t\t\tmoment[ cube.alphaMaximum ][ position ][ cube.greenMinimum ][ cube.blueMinimum ] -\r\n\t\t\t\t\tmoment[ cube.alphaMinimum ][ position ][ cube.greenMaximum ][ cube.blueMinimum ] +\r\n\t\t\t\t\tmoment[ cube.alphaMinimum ][ position ][ cube.greenMinimum ][ cube.blueMinimum ]);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase WuQuant.green:\r\n\t\t\t\tresult = (moment[ cube.alphaMaximum ][ cube.redMaximum ][ position ][ cube.blueMaximum ] -\r\n\t\t\t\t\tmoment[ cube.alphaMaximum ][ cube.redMinimum ][ position ][ cube.blueMaximum ] -\r\n\t\t\t\t\tmoment[ cube.alphaMinimum ][ cube.redMaximum ][ position ][ cube.blueMaximum ] +\r\n\t\t\t\t\tmoment[ cube.alphaMinimum ][ cube.redMinimum ][ position ][ cube.blueMaximum ]) -\r\n\t\t\t\t\t(moment[ cube.alphaMaximum ][ cube.redMaximum ][ position ][ cube.blueMinimum ] -\r\n\t\t\t\t\tmoment[ cube.alphaMaximum ][ cube.redMinimum ][ position ][ cube.blueMinimum ] -\r\n\t\t\t\t\tmoment[ cube.alphaMinimum ][ cube.redMaximum ][ position ][ cube.blueMinimum ] +\r\n\t\t\t\t\tmoment[ cube.alphaMinimum ][ cube.redMinimum ][ position ][ cube.blueMinimum ]);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase WuQuant.blue:\r\n\t\t\t\tresult = (moment[ cube.alphaMaximum ][ cube.redMaximum ][ cube.greenMaximum ][ position ] -\r\n\t\t\t\t\tmoment[ cube.alphaMaximum ][ cube.redMaximum ][ cube.greenMinimum ][ position ] -\r\n\t\t\t\t\tmoment[ cube.alphaMaximum ][ cube.redMinimum ][ cube.greenMaximum ][ position ] +\r\n\t\t\t\t\tmoment[ cube.alphaMaximum ][ cube.redMinimum ][ cube.greenMinimum ][ position ]) -\r\n\t\t\t\t\t(moment[ cube.alphaMinimum ][ cube.redMaximum ][ cube.greenMaximum ][ position ] -\r\n\t\t\t\t\tmoment[ cube.alphaMinimum ][ cube.redMaximum ][ cube.greenMinimum ][ position ] -\r\n\t\t\t\t\tmoment[ cube.alphaMinimum ][ cube.redMinimum ][ cube.greenMaximum ][ position ] +\r\n\t\t\t\t\tmoment[ cube.alphaMinimum ][ cube.redMinimum ][ cube.greenMinimum ][ position ]);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(\"impossible\")\r\n\t\t}\r\n\r\n\t\treturn result | 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Splits the cube in a given color direction at its minimum.\r\n\t */\r\n\tprivate static _bottom(cube : WuColorCube, direction : number, moment : number[][][][]) : number {\r\n\t\tswitch (direction) {\r\n\t\t\tcase WuQuant.alpha:\r\n\t\t\t\treturn (-moment[ cube.alphaMinimum ][ cube.redMaximum ][ cube.greenMaximum ][ cube.blueMaximum ] +\r\n\t\t\t\t\tmoment[ cube.alphaMinimum ][ cube.redMaximum ][ cube.greenMinimum ][ cube.blueMaximum ] +\r\n\t\t\t\t\tmoment[ cube.alphaMinimum ][ cube.redMinimum ][ cube.greenMaximum ][ cube.blueMaximum ] -\r\n\t\t\t\t\tmoment[ cube.alphaMinimum ][ cube.redMinimum ][ cube.greenMinimum ][ cube.blueMaximum ]) -\r\n\t\t\t\t\t(-moment[ cube.alphaMinimum ][ cube.redMaximum ][ cube.greenMaximum ][ cube.blueMinimum ] +\r\n\t\t\t\t\tmoment[ cube.alphaMinimum ][ cube.redMaximum ][ cube.greenMinimum ][ cube.blueMinimum ] +\r\n\t\t\t\t\tmoment[ cube.alphaMinimum ][ cube.redMinimum ][ cube.greenMaximum ][ cube.blueMinimum ] -\r\n\t\t\t\t\tmoment[ cube.alphaMinimum ][ cube.redMinimum ][ cube.greenMinimum ][ cube.blueMinimum ]);\r\n\r\n\t\t\tcase WuQuant.red:\r\n\t\t\t\treturn (-moment[ cube.alphaMaximum ][ cube.redMinimum ][ cube.greenMaximum ][ cube.blueMaximum ] +\r\n\t\t\t\t\tmoment[ cube.alphaMaximum ][ cube.redMinimum ][ cube.greenMinimum ][ cube.blueMaximum ] +\r\n\t\t\t\t\tmoment[ cube.alphaMinimum ][ cube.redMinimum ][ cube.greenMaximum ][ cube.blueMaximum ] -\r\n\t\t\t\t\tmoment[ cube.alphaMinimum ][ cube.redMinimum ][ cube.greenMinimum ][ cube.blueMaximum ]) -\r\n\t\t\t\t\t(-moment[ cube.alphaMaximum ][ cube.redMinimum ][ cube.greenMaximum ][ cube.blueMinimum ] +\r\n\t\t\t\t\tmoment[ cube.alphaMaximum ][ cube.redMinimum ][ cube.greenMinimum ][ cube.blueMinimum ] +\r\n\t\t\t\t\tmoment[ cube.alphaMinimum ][ cube.redMinimum ][ cube.greenMaximum ][ cube.blueMinimum ] -\r\n\t\t\t\t\tmoment[ cube.alphaMinimum ][ cube.redMinimum ][ cube.greenMinimum ][ cube.blueMinimum ]);\r\n\r\n\t\t\tcase WuQuant.green:\r\n\t\t\t\treturn (-moment[ cube.alphaMaximum ][ cube.redMaximum ][ cube.greenMinimum ][ cube.blueMaximum ] +\r\n\t\t\t\t\tmoment[ cube.alphaMaximum ][ cube.redMinimum ][ cube.greenMinimum ][ cube.blueMaximum ] +\r\n\t\t\t\t\tmoment[ cube.alphaMinimum ][ cube.redMaximum ][ cube.greenMinimum ][ cube.blueMaximum ] -\r\n\t\t\t\t\tmoment[ cube.alphaMinimum ][ cube.redMinimum ][ cube.greenMinimum ][ cube.blueMaximum ]) -\r\n\t\t\t\t\t(-moment[ cube.alphaMaximum ][ cube.redMaximum ][ cube.greenMinimum ][ cube.blueMinimum ] +\r\n\t\t\t\t\tmoment[ cube.alphaMaximum ][ cube.redMinimum ][ cube.greenMinimum ][ cube.blueMinimum ] +\r\n\t\t\t\t\tmoment[ cube.alphaMinimum ][ cube.redMaximum ][ cube.greenMinimum ][ cube.blueMinimum ] -\r\n\t\t\t\t\tmoment[ cube.alphaMinimum ][ cube.redMinimum ][ cube.greenMinimum ][ cube.blueMinimum ]);\r\n\r\n\t\t\tcase WuQuant.blue:\r\n\t\t\t\treturn (-moment[ cube.alphaMaximum ][ cube.redMaximum ][ cube.greenMaximum ][ cube.blueMinimum ] +\r\n\t\t\t\t\tmoment[ cube.alphaMaximum ][ cube.redMaximum ][ cube.greenMinimum ][ cube.blueMinimum ] +\r\n\t\t\t\t\tmoment[ cube.alphaMaximum ][ cube.redMinimum ][ cube.greenMaximum ][ cube.blueMinimum ] -\r\n\t\t\t\t\tmoment[ cube.alphaMaximum ][ cube.redMinimum ][ cube.greenMinimum ][ cube.blueMinimum ]) -\r\n\t\t\t\t\t(-moment[ cube.alphaMinimum ][ cube.redMaximum ][ cube.greenMaximum ][ cube.blueMinimum ] +\r\n\t\t\t\t\tmoment[ cube.alphaMinimum ][ cube.redMaximum ][ cube.greenMinimum ][ cube.blueMinimum ] +\r\n\t\t\t\t\tmoment[ cube.alphaMinimum ][ cube.redMinimum ][ cube.greenMaximum ][ cube.blueMinimum ] -\r\n\t\t\t\t\tmoment[ cube.alphaMinimum ][ cube.redMinimum ][ cube.greenMinimum ][ cube.blueMinimum ]);\r\n\r\n\t\t\tdefault:\r\n\t\t\t\t// TODO: why here is return 0, and in this._top there is no default at all (now it is throw error)?\r\n\t\t\t\treturn 0;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates statistical variance for a given cube.\r\n\t */\r\n\tprivate  _calculateVariance(cube : WuColorCube) : number {\r\n\t\tvar volumeRed    = WuQuant._volume(cube, this._momentsRed),\r\n\t\t\tvolumeGreen  = WuQuant._volume(cube, this._momentsGreen),\r\n\t\t\tvolumeBlue   = WuQuant._volume(cube, this._momentsBlue),\r\n\t\t\tvolumeAlpha  = WuQuant._volume(cube, this._momentsAlpha),\r\n\t\t\tvolumeMoment = WuQuant._volumeFloat(cube, this._moments),\r\n\t\t\tvolumeWeight = WuQuant._volume(cube, this._weights),\r\n\r\n\t\t\tdistance     = volumeRed * volumeRed + volumeGreen * volumeGreen + volumeBlue * volumeBlue + volumeAlpha * volumeAlpha;\r\n\r\n\t\treturn volumeMoment - (distance / volumeWeight);\r\n\t}\r\n\r\n\t/**\r\n\t * Finds the optimal (maximal) position for the cut.\r\n\t */\r\n\tprivate _maximize(cube : WuColorCube, direction : number, first : number, last : number, wholeRed : number, wholeGreen : number, wholeBlue : number, wholeAlpha : number, wholeWeight : number) : {max : number; position : number} {\r\n\t\tvar bottomRed    = WuQuant._bottom(cube, direction, this._momentsRed) | 0,\r\n\t\t\tbottomGreen  = WuQuant._bottom(cube, direction, this._momentsGreen) | 0,\r\n\t\t\tbottomBlue   = WuQuant._bottom(cube, direction, this._momentsBlue) | 0,\r\n\t\t\tbottomAlpha  = WuQuant._bottom(cube, direction, this._momentsAlpha) | 0,\r\n\t\t\tbottomWeight = WuQuant._bottom(cube, direction, this._weights) | 0,\r\n\r\n\t\t\tresult       = 0.0,\r\n\t\t\tcutPosition  = -1;\r\n\r\n\t\tfor (var position = first; position < last; ++position) {\r\n\t\t\t// determines the cube cut at a certain position\r\n\t\t\tvar halfRed    = bottomRed + WuQuant._top(cube, direction, position, this._momentsRed),\r\n\t\t\t\thalfGreen  = bottomGreen + WuQuant._top(cube, direction, position, this._momentsGreen),\r\n\t\t\t\thalfBlue   = bottomBlue + WuQuant._top(cube, direction, position, this._momentsBlue),\r\n\t\t\t\thalfAlpha  = bottomAlpha + WuQuant._top(cube, direction, position, this._momentsAlpha),\r\n\t\t\t\thalfWeight = bottomWeight + WuQuant._top(cube, direction, position, this._weights);\r\n\r\n\t\t\t// the cube cannot be cut at bottom (this would lead to empty cube)\r\n\t\t\tif (halfWeight != 0) {\r\n\t\t\t\tvar halfDistance = halfRed * halfRed + halfGreen * halfGreen + halfBlue * halfBlue + halfAlpha * halfAlpha,\r\n\t\t\t\t\ttemp         = halfDistance / halfWeight;\r\n\r\n\t\t\t\thalfRed    = wholeRed - halfRed;\r\n\t\t\t\thalfGreen  = wholeGreen - halfGreen;\r\n\t\t\t\thalfBlue   = wholeBlue - halfBlue;\r\n\t\t\t\thalfAlpha  = wholeAlpha - halfAlpha;\r\n\t\t\t\thalfWeight = wholeWeight - halfWeight;\r\n\r\n\t\t\t\tif (halfWeight != 0) {\r\n\t\t\t\t\thalfDistance = halfRed * halfRed + halfGreen * halfGreen + halfBlue * halfBlue + halfAlpha * halfAlpha;\r\n\t\t\t\t\ttemp += halfDistance / halfWeight;\r\n\r\n\t\t\t\t\tif (temp > result) {\r\n\t\t\t\t\t\tresult      = temp;\r\n\t\t\t\t\t\tcutPosition = position;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn { max : result, position : cutPosition };\r\n\t}\r\n\r\n\t// Cuts a cube with another one.\r\n\tprivate _cut(first : WuColorCube, second : WuColorCube) : boolean {\r\n\t\tvar direction : number,\r\n\r\n\t\t\twholeRed    = WuQuant._volume(first, this._momentsRed),\r\n\t\t\twholeGreen  = WuQuant._volume(first, this._momentsGreen),\r\n\t\t\twholeBlue   = WuQuant._volume(first, this._momentsBlue),\r\n\t\t\twholeAlpha  = WuQuant._volume(first, this._momentsAlpha),\r\n\t\t\twholeWeight = WuQuant._volume(first, this._weights),\r\n\r\n\t\t\tred         = this._maximize(first, WuQuant.red, first.redMinimum + 1, first.redMaximum, wholeRed, wholeGreen, wholeBlue, wholeAlpha, wholeWeight),\r\n\t\t\tgreen       = this._maximize(first, WuQuant.green, first.greenMinimum + 1, first.greenMaximum, wholeRed, wholeGreen, wholeBlue, wholeAlpha, wholeWeight),\r\n\t\t\tblue        = this._maximize(first, WuQuant.blue, first.blueMinimum + 1, first.blueMaximum, wholeRed, wholeGreen, wholeBlue, wholeAlpha, wholeWeight),\r\n\t\t\talpha       = this._maximize(first, WuQuant.alpha, first.alphaMinimum + 1, first.alphaMaximum, wholeRed, wholeGreen, wholeBlue, wholeAlpha, wholeWeight);\r\n\r\n\t\tif (alpha.max >= red.max && alpha.max >= green.max && alpha.max >= blue.max) {\r\n\t\t\tdirection = WuQuant.alpha;\r\n\r\n\t\t\t// cannot split empty cube\r\n\t\t\tif (alpha.position < 0) return false;\r\n\t\t} else {\r\n\t\t\tif (red.max >= alpha.max && red.max >= green.max && red.max >= blue.max) {\r\n\t\t\t\tdirection = WuQuant.red;\r\n\t\t\t} else if (green.max >= alpha.max && green.max >= red.max && green.max >= blue.max) {\r\n\t\t\t\tdirection = WuQuant.green;\r\n\t\t\t} else {\r\n\t\t\t\tdirection = WuQuant.blue;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsecond.redMaximum   = first.redMaximum;\r\n\t\tsecond.greenMaximum = first.greenMaximum;\r\n\t\tsecond.blueMaximum  = first.blueMaximum;\r\n\t\tsecond.alphaMaximum = first.alphaMaximum;\r\n\r\n\t\t// cuts in a certain direction\r\n\t\tswitch (direction) {\r\n\t\t\tcase WuQuant.red:\r\n\t\t\t\tsecond.redMinimum = first.redMaximum = red.position;\r\n\t\t\t\tsecond.greenMinimum = first.greenMinimum;\r\n\t\t\t\tsecond.blueMinimum  = first.blueMinimum;\r\n\t\t\t\tsecond.alphaMinimum = first.alphaMinimum;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase WuQuant.green:\r\n\t\t\t\tsecond.greenMinimum = first.greenMaximum = green.position;\r\n\t\t\t\tsecond.redMinimum   = first.redMinimum;\r\n\t\t\t\tsecond.blueMinimum  = first.blueMinimum;\r\n\t\t\t\tsecond.alphaMinimum = first.alphaMinimum;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase WuQuant.blue:\r\n\t\t\t\tsecond.blueMinimum = first.blueMaximum = blue.position;\r\n\t\t\t\tsecond.redMinimum   = first.redMinimum;\r\n\t\t\t\tsecond.greenMinimum = first.greenMinimum;\r\n\t\t\t\tsecond.alphaMinimum = first.alphaMinimum;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase WuQuant.alpha:\r\n\t\t\t\tsecond.alphaMinimum = first.alphaMaximum = alpha.position;\r\n\t\t\t\tsecond.blueMinimum  = first.blueMinimum;\r\n\t\t\t\tsecond.redMinimum   = first.redMinimum;\r\n\t\t\t\tsecond.greenMinimum = first.greenMinimum;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\t// determines the volumes after cut\r\n\t\tfirst.volume  = (first.redMaximum - first.redMinimum) * (first.greenMaximum - first.greenMinimum) * (first.blueMaximum - first.blueMinimum) * (first.alphaMaximum - first.alphaMinimum);\r\n\t\tsecond.volume = (second.redMaximum - second.redMinimum) * (second.greenMaximum - second.greenMinimum) * (second.blueMaximum - second.blueMinimum) * (second.alphaMaximum - second.alphaMinimum);\r\n\r\n\t\t// the cut was successful\r\n\t\treturn true;\r\n\t}\r\n\r\n\tprivate _initialize(colors : number) : void {\r\n\t\tthis._colors = colors;\r\n\r\n\t\t// creates all the _cubes\r\n\t\tthis._cubes = [];\r\n\r\n\t\t// initializes all the _cubes\r\n\t\tfor (var cubeIndex = 0; cubeIndex < colors; cubeIndex++) {\r\n\t\t\tthis._cubes[ cubeIndex ] = new WuColorCube();\r\n\t\t}\r\n\r\n\t\t// resets the reference minimums\r\n\t\tthis._cubes[ 0 ].redMinimum   = 0;\r\n\t\tthis._cubes[ 0 ].greenMinimum = 0;\r\n\t\tthis._cubes[ 0 ].blueMinimum  = 0;\r\n\t\tthis._cubes[ 0 ].alphaMinimum = 0;\r\n\r\n\t\t// resets the reference maximums\r\n\t\tthis._cubes[ 0 ].redMaximum   = this._maxSideIndex;\r\n\t\tthis._cubes[ 0 ].greenMaximum = this._maxSideIndex;\r\n\t\tthis._cubes[ 0 ].blueMaximum  = this._maxSideIndex;\r\n\t\tthis._cubes[ 0 ].alphaMaximum = this._alphaMaxSideIndex;\r\n\r\n\t\tthis._weights      = createArray4D(this._alphaSideSize, this._sideSize, this._sideSize, this._sideSize);\r\n\t\tthis._momentsRed   = createArray4D(this._alphaSideSize, this._sideSize, this._sideSize, this._sideSize);\r\n\t\tthis._momentsGreen = createArray4D(this._alphaSideSize, this._sideSize, this._sideSize, this._sideSize);\r\n\t\tthis._momentsBlue  = createArray4D(this._alphaSideSize, this._sideSize, this._sideSize, this._sideSize);\r\n\t\tthis._momentsAlpha = createArray4D(this._alphaSideSize, this._sideSize, this._sideSize, this._sideSize);\r\n\t\tthis._moments      = createArray4D(this._alphaSideSize, this._sideSize, this._sideSize, this._sideSize);\r\n\r\n\t\tthis._table = [];\r\n\t\tfor (var tableIndex = 0; tableIndex < 256; ++tableIndex) {\r\n\t\t\tthis._table[ tableIndex ] = tableIndex * tableIndex;\r\n\t\t}\r\n\r\n\t\tthis._pixels = [];\r\n\t}\r\n\r\n\tprivate _setQuality(significantBitsPerChannel : number = 5) : void {\r\n\t\tthis._significantBitsPerChannel = significantBitsPerChannel;\r\n\t\tthis._maxSideIndex              = 1 << this._significantBitsPerChannel;\r\n\t\tthis._alphaMaxSideIndex         = this._maxSideIndex;\r\n\r\n\t\tthis._sideSize      = this._maxSideIndex + 1;\r\n\t\tthis._alphaSideSize = this._alphaMaxSideIndex + 1;\r\n\t}\r\n\r\n}\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/palette/wu/wuQuant.ts\n **/","/**\r\n * @preserve\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * iq.ts - Image Quantization Library\r\n */\r\nimport {IImageDitherer} from \"./common\"\r\nimport {NearestColor} from \"./nearestColor\"\r\nimport {ErrorDiffusionArray, ErrorDiffusionArrayKernel} from \"./array\"\r\nimport {ErrorDiffusionRiemersma} from \"./riemersma\"\r\n\r\nexport {\r\n\tIImageDitherer,\r\n\tNearestColor,\r\n\tErrorDiffusionArray,\r\n\tErrorDiffusionArrayKernel,\r\n\tErrorDiffusionRiemersma\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/image/index.ts\n **/","/**\r\n * @preserve\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * nearestColor.ts - part of Image Quantization Library\r\n */\r\nimport {IImageDitherer} from \"./common\"\r\nimport {IDistanceCalculator} from \"../distance/common\"\r\nimport {PointContainer} from \"../utils/pointContainer\"\r\nimport {Palette} from \"../utils/palette\"\r\n\r\nexport class NearestColor implements IImageDitherer {\r\n\tprivate _distance : IDistanceCalculator;\r\n\r\n\tconstructor(colorDistanceCalculator : IDistanceCalculator) {\r\n\t\tthis._distance = colorDistanceCalculator;\r\n\t}\r\n\r\n\tquantize(pointBuffer : PointContainer, palette : Palette) : PointContainer {\r\n\t\tvar pointArray = pointBuffer.getPointArray(),\r\n\t\t\twidth      = pointBuffer.getWidth(),\r\n\t\t\theight     = pointBuffer.getHeight();\r\n\r\n\t\tfor (var y = 0; y < height; y++) {\r\n\t\t\tfor (var x = 0, idx = y * width; x < width; x++, idx++) {\r\n\t\t\t\t// Image pixel\r\n\t\t\t\tvar point = pointArray[ idx ];\r\n\t\t\t\t// Reduced pixel\r\n\t\t\t\tpoint.from(palette.getNearestColor(this._distance, point));\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn pointBuffer;\r\n\t}\r\n}\r\n\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/image/nearestColor.ts\n **/","/**\r\n * @preserve\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * ditherErrorDiffusionArray.ts - part of Image Quantization Library\r\n */\r\nimport {IImageDitherer} from \"./common\"\r\nimport {IDistanceCalculator} from \"../distance/common\"\r\nimport {PointContainer} from \"../utils/pointContainer\"\r\nimport {Palette} from \"../utils/palette\"\r\nimport {Point} from \"../utils/point\"\r\nimport {intInRange} from \"../utils/arithmetic\"\r\n\r\n// TODO: is it the best name for this enum \"kernel\"?\r\nexport enum ErrorDiffusionArrayKernel {\r\n\tFloydSteinberg = 0,\r\n\tFalseFloydSteinberg,\r\n\tStucki,\r\n\tAtkinson,\r\n\tJarvis,\r\n\tBurkes,\r\n\tSierra,\r\n\tTwoSierra,\r\n\tSierraLite\r\n}\r\n\r\n// http://www.tannerhelland.com/4660/dithering-eleven-algorithms-source-code/\r\nexport class ErrorDiffusionArray implements IImageDitherer {\r\n\tprivate _minColorDistance : number;\r\n\tprivate _serpentine : boolean;\r\n\tprivate _kernel : number[][];\r\n\t/**\r\n\t * true = GIMP, false = XNVIEW\r\n\t */\r\n\tprivate _calculateErrorLikeGIMP : boolean;\r\n\r\n\tprivate _distance : IDistanceCalculator;\r\n\r\n\tconstructor(colorDistanceCalculator : IDistanceCalculator, kernel : ErrorDiffusionArrayKernel, serpentine : boolean = true, minimumColorDistanceToDither : number = 0, calculateErrorLikeGIMP : boolean = false) {\r\n\t\tthis._setKernel(kernel);\r\n\r\n\t\tthis._distance               = colorDistanceCalculator;\r\n\t\tthis._minColorDistance       = minimumColorDistanceToDither;\r\n\t\tthis._serpentine             = serpentine;\r\n\t\tthis._calculateErrorLikeGIMP = calculateErrorLikeGIMP;\r\n\t}\r\n\r\n\t// adapted from http://jsbin.com/iXofIji/2/edit by PAEz\r\n\t// fixed version. it doesn't use image pixels as error storage, also it doesn't have 0.3 + 0.3 + 0.3 + 0.3 = 0 error\r\n\tquantize(pointBuffer : PointContainer, palette : Palette) : PointContainer {\r\n\t\tvar pointArray                = pointBuffer.getPointArray(),\r\n\t\t\toriginalPoint             = new Point(),\r\n\t\t\twidth                     = pointBuffer.getWidth(),\r\n\t\t\theight                    = pointBuffer.getHeight(),\r\n\t\t\tdir                       = 1,\r\n\t\t\terrorLines : number[][][] = [];\r\n\r\n\t\t// initial error lines (number is taken from dithering kernel)\r\n\t\tfor (var i = 0, maxErrorLines = 1; i < this._kernel.length; i++) {\r\n\t\t\tvar kernelErrorLines = this._kernel[ i ][ 2 ] + 1;\r\n\t\t\t(maxErrorLines < kernelErrorLines) && (maxErrorLines = kernelErrorLines);\r\n\t\t}\r\n\t\tfor (var i = 0; i < maxErrorLines; i++) {\r\n\t\t\tthis._fillErrorLine(errorLines[ i ] = [], width);\r\n\t\t}\r\n\r\n\t\tfor (var y = 0; y < height; y++) {\r\n\t\t\t// always serpentine\r\n\t\t\tif (this._serpentine) dir = dir * -1;\r\n\r\n\t\t\tvar lni    = y * width,\r\n\t\t\t\txStart = dir == 1 ? 0 : width - 1,\r\n\t\t\t\txEnd   = dir == 1 ? width : -1;\r\n\r\n\t\t\t// cyclic shift with erasing\r\n\t\t\tthis._fillErrorLine(errorLines[ 0 ], width);\r\n\t\t\t// TODO: why it is needed to cast types here?\r\n\t\t\terrorLines.push(<number[][]>errorLines.shift());\r\n\r\n\t\t\tvar errorLine = errorLines[ 0 ];\r\n\t\t\tfor (var x = xStart, idx = lni + xStart; x !== xEnd; x += dir, idx += dir) {\r\n\t\t\t\t// Image pixel\r\n\t\t\t\tvar point = pointArray[ idx ],\r\n\t\t\t\t\t//originalPoint = new Utils.Point(),\r\n\t\t\t\t\terror = errorLine[ x ];\r\n\r\n\t\t\t\toriginalPoint.from(point);\r\n\r\n\t\t\t\tvar correctedPoint = Point.createByRGBA(\r\n\t\t\t\t\tintInRange(point.r + error[ 0 ], 0, 255),\r\n\t\t\t\t\tintInRange(point.g + error[ 1 ], 0, 255),\r\n\t\t\t\t\tintInRange(point.b + error[ 2 ], 0, 255),\r\n\t\t\t\t\tintInRange(point.a + error[ 3 ], 0, 255)\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// Reduced pixel\r\n\t\t\t\tvar palettePoint = palette.getNearestColor(this._distance, correctedPoint);\r\n\t\t\t\tpoint.from(palettePoint);\r\n\r\n\t\t\t\t// dithering strength\r\n\t\t\t\tif (this._minColorDistance) {\r\n\t\t\t\t\tvar dist = this._distance.calculateNormalized(point, palettePoint);\r\n\t\t\t\t\tif (dist < this._minColorDistance)\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Component distance\r\n\t\t\t\tif (this._calculateErrorLikeGIMP) {\r\n\t\t\t\t\tvar er = correctedPoint.r - palettePoint.r,\r\n\t\t\t\t\t\teg = correctedPoint.g - palettePoint.g,\r\n\t\t\t\t\t\teb = correctedPoint.b - palettePoint.b,\r\n\t\t\t\t\t\tea = correctedPoint.a - palettePoint.a;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar er = originalPoint.r - palettePoint.r,\r\n\t\t\t\t\t\teg = originalPoint.g - palettePoint.g,\r\n\t\t\t\t\t\teb = originalPoint.b - palettePoint.b,\r\n\t\t\t\t\t\tea = originalPoint.a - palettePoint.a;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar dStart = dir == 1 ? 0 : this._kernel.length - 1,\r\n\t\t\t\t\tdEnd   = dir == 1 ? this._kernel.length : -1;\r\n\r\n\t\t\t\tfor (var i = dStart; i !== dEnd; i += dir) {\r\n\t\t\t\t\tvar x1 = this._kernel[ i ][ 1 ] * dir,\r\n\t\t\t\t\t\ty1 = this._kernel[ i ][ 2 ];\r\n\r\n\t\t\t\t\tif (x1 + x >= 0 && x1 + x < width && y1 + y >= 0 && y1 + y < height) {\r\n\t\t\t\t\t\tvar d = this._kernel[ i ][ 0 ],\r\n\t\t\t\t\t\t\te = errorLines[ y1 ][ x1 + x ];\r\n\r\n\t\t\t\t\t\te[ 0 ] = e[ 0 ] + er * d;\r\n\t\t\t\t\t\te[ 1 ] = e[ 1 ] + eg * d;\r\n\t\t\t\t\t\te[ 2 ] = e[ 2 ] + eb * d;\r\n\t\t\t\t\t\te[ 3 ] = e[ 3 ] + ea * d;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn pointBuffer;\r\n\t}\r\n\r\n\tprivate _fillErrorLine(errorLine : number[][], width : number) : void {\r\n\t\t// shrink\r\n\t\tif (errorLine.length > width) {\r\n\t\t\terrorLine.length = width;\r\n\t\t}\r\n\r\n\t\t// reuse existing arrays\r\n\t\tvar l = errorLine.length;\r\n\t\tfor (var i = 0; i < l; i++) {\r\n\t\t\tvar error  = errorLine[ i ];\r\n\t\t\terror[ 0 ] = error[ 1 ] = error[ 2 ] = error[ 3 ] = 0;\r\n\t\t}\r\n\r\n\t\t// create missing arrays\r\n\t\tfor (var i = l; i < width; i++) {\r\n\t\t\terrorLine[ i ] = [ 0.0, 0.0, 0.0, 0.0 ];\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _setKernel(kernel : ErrorDiffusionArrayKernel) {\r\n\t\tswitch (kernel) {\r\n\t\t\tcase ErrorDiffusionArrayKernel.FloydSteinberg:\r\n\t\t\t\tthis._kernel = [\r\n\t\t\t\t\t[ 7 / 16, 1, 0 ],\r\n\t\t\t\t\t[ 3 / 16, -1, 1 ],\r\n\t\t\t\t\t[ 5 / 16, 0, 1 ],\r\n\t\t\t\t\t[ 1 / 16, 1, 1 ]\r\n\t\t\t\t];\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase ErrorDiffusionArrayKernel.FalseFloydSteinberg:\r\n\t\t\t\tthis._kernel = [\r\n\t\t\t\t\t[ 3 / 8, 1, 0 ],\r\n\t\t\t\t\t[ 3 / 8, 0, 1 ],\r\n\t\t\t\t\t[ 2 / 8, 1, 1 ]\r\n\t\t\t\t];\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase ErrorDiffusionArrayKernel.Stucki:\r\n\t\t\t\tthis._kernel = [\r\n\t\t\t\t\t[ 8 / 42, 1, 0 ],\r\n\t\t\t\t\t[ 4 / 42, 2, 0 ],\r\n\t\t\t\t\t[ 2 / 42, -2, 1 ],\r\n\t\t\t\t\t[ 4 / 42, -1, 1 ],\r\n\t\t\t\t\t[ 8 / 42, 0, 1 ],\r\n\t\t\t\t\t[ 4 / 42, 1, 1 ],\r\n\t\t\t\t\t[ 2 / 42, 2, 1 ],\r\n\t\t\t\t\t[ 1 / 42, -2, 2 ],\r\n\t\t\t\t\t[ 2 / 42, -1, 2 ],\r\n\t\t\t\t\t[ 4 / 42, 0, 2 ],\r\n\t\t\t\t\t[ 2 / 42, 1, 2 ],\r\n\t\t\t\t\t[ 1 / 42, 2, 2 ]\r\n\t\t\t\t];\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase ErrorDiffusionArrayKernel.Atkinson:\r\n\t\t\t\tthis._kernel = [\r\n\t\t\t\t\t[ 1 / 8, 1, 0 ],\r\n\t\t\t\t\t[ 1 / 8, 2, 0 ],\r\n\t\t\t\t\t[ 1 / 8, -1, 1 ],\r\n\t\t\t\t\t[ 1 / 8, 0, 1 ],\r\n\t\t\t\t\t[ 1 / 8, 1, 1 ],\r\n\t\t\t\t\t[ 1 / 8, 0, 2 ]\r\n\t\t\t\t];\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase ErrorDiffusionArrayKernel.Jarvis:\r\n\t\t\t\tthis._kernel = [\t\t\t// Jarvis, Judice, and Ninke / JJN?\r\n\t\t\t\t\t[ 7 / 48, 1, 0 ],\r\n\t\t\t\t\t[ 5 / 48, 2, 0 ],\r\n\t\t\t\t\t[ 3 / 48, -2, 1 ],\r\n\t\t\t\t\t[ 5 / 48, -1, 1 ],\r\n\t\t\t\t\t[ 7 / 48, 0, 1 ],\r\n\t\t\t\t\t[ 5 / 48, 1, 1 ],\r\n\t\t\t\t\t[ 3 / 48, 2, 1 ],\r\n\t\t\t\t\t[ 1 / 48, -2, 2 ],\r\n\t\t\t\t\t[ 3 / 48, -1, 2 ],\r\n\t\t\t\t\t[ 5 / 48, 0, 2 ],\r\n\t\t\t\t\t[ 3 / 48, 1, 2 ],\r\n\t\t\t\t\t[ 1 / 48, 2, 2 ]\r\n\t\t\t\t];\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase ErrorDiffusionArrayKernel.Burkes:\r\n\t\t\t\tthis._kernel = [\r\n\t\t\t\t\t[ 8 / 32, 1, 0 ],\r\n\t\t\t\t\t[ 4 / 32, 2, 0 ],\r\n\t\t\t\t\t[ 2 / 32, -2, 1 ],\r\n\t\t\t\t\t[ 4 / 32, -1, 1 ],\r\n\t\t\t\t\t[ 8 / 32, 0, 1 ],\r\n\t\t\t\t\t[ 4 / 32, 1, 1 ],\r\n\t\t\t\t\t[ 2 / 32, 2, 1 ],\r\n\t\t\t\t];\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase ErrorDiffusionArrayKernel.Sierra:\r\n\t\t\t\tthis._kernel = [\r\n\t\t\t\t\t[ 5 / 32, 1, 0 ],\r\n\t\t\t\t\t[ 3 / 32, 2, 0 ],\r\n\t\t\t\t\t[ 2 / 32, -2, 1 ],\r\n\t\t\t\t\t[ 4 / 32, -1, 1 ],\r\n\t\t\t\t\t[ 5 / 32, 0, 1 ],\r\n\t\t\t\t\t[ 4 / 32, 1, 1 ],\r\n\t\t\t\t\t[ 2 / 32, 2, 1 ],\r\n\t\t\t\t\t[ 2 / 32, -1, 2 ],\r\n\t\t\t\t\t[ 3 / 32, 0, 2 ],\r\n\t\t\t\t\t[ 2 / 32, 1, 2 ]\r\n\t\t\t\t];\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase ErrorDiffusionArrayKernel.TwoSierra:\r\n\t\t\t\tthis._kernel = [\r\n\t\t\t\t\t[ 4 / 16, 1, 0 ],\r\n\t\t\t\t\t[ 3 / 16, 2, 0 ],\r\n\t\t\t\t\t[ 1 / 16, -2, 1 ],\r\n\t\t\t\t\t[ 2 / 16, -1, 1 ],\r\n\t\t\t\t\t[ 3 / 16, 0, 1 ],\r\n\t\t\t\t\t[ 2 / 16, 1, 1 ],\r\n\t\t\t\t\t[ 1 / 16, 2, 1 ]\r\n\t\t\t\t];\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase ErrorDiffusionArrayKernel.SierraLite:\r\n\t\t\t\tthis._kernel = [\r\n\t\t\t\t\t[ 2 / 4, 1, 0 ],\r\n\t\t\t\t\t[ 1 / 4, -1, 1 ],\r\n\t\t\t\t\t[ 1 / 4, 0, 1 ]\r\n\t\t\t\t];\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(\"ErrorDiffusionArray: unknown kernel = \" + kernel);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/image/array.ts\n **/","/**\r\n * @preserve\r\n * MIT License\r\n *\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\r\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n *\r\n * nearestColor.ts - part of Image Quantization Library\r\n */\r\nimport {IImageDitherer} from \"./common\"\r\nimport {HilbertCurveBase} from \"./spaceFillingCurves/hilbertCurve\"\r\nimport {IDistanceCalculator} from \"../distance/common\"\r\nimport {PointContainer} from \"../utils/pointContainer\"\r\nimport {Palette} from \"../utils/palette\"\r\nimport {Point} from \"../utils/point\"\r\nimport {intInRange} from \"../utils/arithmetic\"\r\n\r\nexport class ErrorDiffusionRiemersma implements IImageDitherer {\r\n\tprivate _distance : IDistanceCalculator;\r\n\tprivate _weights : number[];\r\n\tprivate _errorQueueSize : number;\r\n\tprivate _errorPropagation : number;\r\n\tprivate _max : number;\r\n\r\n\tconstructor(colorDistanceCalculator : IDistanceCalculator, errorQueueSize : number = 16, errorPropagation : number = 1) {\r\n\t\tthis._distance         = colorDistanceCalculator;\r\n\t\tthis._errorPropagation = errorPropagation;\r\n\t\tthis._errorQueueSize   = errorQueueSize;\r\n\t\tthis._max              = this._errorQueueSize;\r\n\t\tthis._createWeights();\r\n\t}\r\n\r\n\tquantize(pointBuffer : PointContainer, palette : Palette) : PointContainer {\r\n\t\tvar curve                                                           = new HilbertCurveBase(),\r\n\t\t\tpointArray                                                      = pointBuffer.getPointArray(),\r\n\t\t\twidth                                                           = pointBuffer.getWidth(),\r\n\t\t\theight                                                          = pointBuffer.getHeight(),\r\n\t\t\terrorQueue : {r : number; g : number; b : number; a : number}[] = [],\r\n\t\t\thead                                                            = 0;\r\n\r\n\t\tfor (var i = 0; i < this._errorQueueSize; i++) {\r\n\t\t\terrorQueue[ i ] = { r : 0, g : 0, b : 0, a : 0 };\r\n\t\t}\r\n\r\n\t\t// just for test!!\r\n\t\tvar testArray = new Array(height * width);\r\n\t\tfor (var i = 0; i < testArray.length; i++) {\r\n\t\t\ttestArray[ i ] = 0;\r\n\t\t}\r\n\r\n\t\tcurve.walk(width, height, (x, y) => {\r\n\t\t\t// just for test\r\n\t\t\ttestArray[ x + y * width ]++;\r\n\r\n\t\t\tvar p = pointArray[ x + y * width ], r = p.r, g = p.g, b = p.b, a = p.a;\r\n\t\t\tfor (var i = 0; i < this._errorQueueSize; i++) {\r\n\t\t\t\tvar weight = this._weights[ i ],\r\n\t\t\t\t\te      = errorQueue[ (i + head) % this._errorQueueSize ];\r\n\r\n\t\t\t\tr += e.r * weight;\r\n\t\t\t\tg += e.g * weight;\r\n\t\t\t\tb += e.b * weight;\r\n\t\t\t\ta += e.a * weight;\r\n\t\t\t}\r\n\r\n\t\t\tvar correctedPoint = Point.createByRGBA(\r\n\t\t\t\tintInRange(r, 0, 255),\r\n\t\t\t\tintInRange(g, 0, 255),\r\n\t\t\t\tintInRange(b, 0, 255),\r\n\t\t\t\tintInRange(a, 0, 255)\r\n\t\t\t\t),\r\n\t\t\t\tquantizedPoint = palette.getNearestColor(this._distance, correctedPoint);\r\n\r\n\t\t\t// update head and calculate tail\r\n\t\t\thead     = (head + 1) % this._errorQueueSize;\r\n\t\t\tvar tail = (head + this._errorQueueSize - 1) % this._errorQueueSize;\r\n\r\n\t\t\t// update error with new value\r\n\t\t\terrorQueue[ tail ].r = p.r - quantizedPoint.r;\r\n\t\t\terrorQueue[ tail ].g = p.g - quantizedPoint.g;\r\n\t\t\terrorQueue[ tail ].b = p.b - quantizedPoint.b;\r\n\t\t\terrorQueue[ tail ].a = p.a - quantizedPoint.a;\r\n\r\n\t\t\t// update point\r\n\t\t\tp.from(quantizedPoint);\r\n\t\t});\r\n\r\n\t\t// just for test\r\n\t\tfor (var i = 0; i < testArray.length; i++) {\r\n\t\t\tif (testArray[ i ] !== 1) throw new Error(\"x\");\r\n\t\t}\r\n\t\treturn pointBuffer;\r\n\t}\r\n\r\n\tprivate _createWeights() : void {\r\n\t\tthis._weights = [];\r\n\r\n\t\tvar multiplier = Math.exp(Math.log(this._max) / (this._errorQueueSize - 1));\r\n\t\tfor (var i = 0, next = 1; i < this._errorQueueSize; i++) {\r\n\t\t\tthis._weights[ i ] = (((next + 0.5) | 0) / this._max) * this._errorPropagation;\r\n\t\t\tnext *= multiplier;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/image/riemersma.ts\n **/","export enum Direction {\r\n\tNONE = 0,\r\n\tUP,\r\n\tLEFT,\r\n\tRIGHT,\r\n\tDOWN,\r\n}\r\n\r\n// Check code against double-entrance into walk (walk=> callback => walk)\r\nexport class HilbertCurveBase {\r\n\tprivate _x : number;\r\n\tprivate _y : number;\r\n\tprivate _d : number;\r\n\tprivate _width : number;\r\n\tprivate _height : number;\r\n\tprivate _callback : (x : number, y : number, d : number) => void;\r\n\tprivate _level : number;\r\n\r\n\twalk(width : number, height : number, visitorCallback : (x : number, y : number, d : number) => void) : void {\r\n\t\tthis._x        = 0;\r\n\t\tthis._y        = 0;\r\n\t\tthis._d        = 0;\r\n\t\tthis._width    = width;\r\n\t\tthis._height   = height;\r\n\t\tthis._callback = visitorCallback;\r\n\r\n\t\tvar maxBound = Math.max(width, height);\r\n\r\n\t\tthis._level = (Math.log(maxBound) / Math.log(2) + 1) | 0;\r\n\t\tthis._walkHilbert(Direction.UP);\r\n\t\tthis._visit(Direction.NONE);\r\n\t}\r\n\r\n\t_walkHilbert(direction : Direction) {\r\n\t\tif (this._level < 1) return;\r\n\r\n\t\tthis._level--;\r\n\t\tswitch (direction) {\r\n\t\t\tcase Direction.LEFT:\r\n\t\t\t\tthis._walkHilbert(Direction.UP);\r\n\t\t\t\tthis._visit(Direction.RIGHT);\r\n\t\t\t\tthis._walkHilbert(Direction.LEFT);\r\n\t\t\t\tthis._visit(Direction.DOWN);\r\n\t\t\t\tthis._walkHilbert(Direction.LEFT);\r\n\t\t\t\tthis._visit(Direction.LEFT);\r\n\t\t\t\tthis._walkHilbert(Direction.DOWN);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase Direction.RIGHT:\r\n\t\t\t\tthis._walkHilbert(Direction.DOWN);\r\n\t\t\t\tthis._visit(Direction.LEFT);\r\n\t\t\t\tthis._walkHilbert(Direction.RIGHT);\r\n\t\t\t\tthis._visit(Direction.UP);\r\n\t\t\t\tthis._walkHilbert(Direction.RIGHT);\r\n\t\t\t\tthis._visit(Direction.RIGHT);\r\n\t\t\t\tthis._walkHilbert(Direction.UP);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase Direction.UP:\r\n\t\t\t\tthis._walkHilbert(Direction.LEFT);\r\n\t\t\t\tthis._visit(Direction.DOWN);\r\n\t\t\t\tthis._walkHilbert(Direction.UP);\r\n\t\t\t\tthis._visit(Direction.RIGHT);\r\n\t\t\t\tthis._walkHilbert(Direction.UP);\r\n\t\t\t\tthis._visit(Direction.UP);\r\n\t\t\t\tthis._walkHilbert(Direction.RIGHT);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase Direction.DOWN:\r\n\t\t\t\tthis._walkHilbert(Direction.RIGHT);\r\n\t\t\t\tthis._visit(Direction.UP);\r\n\t\t\t\tthis._walkHilbert(Direction.DOWN);\r\n\t\t\t\tthis._visit(Direction.LEFT);\r\n\t\t\t\tthis._walkHilbert(Direction.DOWN);\r\n\t\t\t\tthis._visit(Direction.DOWN);\r\n\t\t\t\tthis._walkHilbert(Direction.LEFT);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tthis._level++;\r\n\t}\r\n\r\n\tprivate _visit(direction : Direction) : void {\r\n\t\tif (this._x >= 0 && this._x < this._width && this._y >= 0 && this._y < this._height) {\r\n\t\t\tthis._callback(this._x, this._y, this._d);\r\n\t\t\tthis._d++;\r\n\t\t}\r\n\t\tswitch (direction) {\r\n\t\t\tcase Direction.LEFT:\r\n\t\t\t\tthis._x--;\r\n\t\t\t\tbreak;\r\n\t\t\tcase Direction.RIGHT:\r\n\t\t\t\tthis._x++;\r\n\t\t\t\tbreak;\r\n\t\t\tcase Direction.UP:\r\n\t\t\t\tthis._y--;\r\n\t\t\t\tbreak;\r\n\t\t\tcase Direction.DOWN:\r\n\t\t\t\tthis._y++;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/image/spaceFillingCurves/hilbertCurve.ts\n **/","/**\r\n * @preserve\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * iq.ts - Image Quantization Library\r\n */\r\nimport {SSIM} from \"./ssim\"\r\n\r\nexport {\r\n\tSSIM\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/quality/index.ts\n **/","/**\r\n * @preserve\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * ssim.ts - part of Image Quantization Library\r\n */\r\nimport {PointContainer} from \"../utils/pointContainer\"\r\nimport {Y} from \"../constants/bt709\"\r\n\r\n// based on https://github.com/rhys-e/structural-similarity\r\n// http://en.wikipedia.org/wiki/Structural_similarity\r\nvar K1 = 0.01,\r\n\tK2 = 0.03;\r\n\r\nexport class SSIM {\r\n\tcompare(image1 : PointContainer, image2 : PointContainer) {\r\n\t\tif (image1.getHeight() !== image2.getHeight() || image1.getWidth() !== image2.getWidth()) {\r\n\t\t\tthrow new Error(\"Images have different sizes!\");\r\n\t\t}\r\n\r\n\t\tvar bitsPerComponent = 8,\r\n\t\t\tL                = (1 << bitsPerComponent) - 1,\r\n\t\t\tc1               = Math.pow((K1 * L), 2),\r\n\t\t\tc2               = Math.pow((K2 * L), 2),\r\n\t\t\tnumWindows       = 0,\r\n\t\t\tmssim            = 0.0;\r\n\r\n\t\t//calculate ssim for each window\r\n\t\tthis._iterate(image1, image2, (lumaValues1 : number[], lumaValues2 : number[], averageLumaValue1 : number, averageLumaValue2 : number) => {\r\n\t\t\t//calculate variance and covariance\r\n\t\t\tvar sigxy  = 0.0,\r\n\t\t\t\tsigsqx = 0.0,\r\n\t\t\t\tsigsqy = 0.0;\r\n\r\n\t\t\tfor (var i = 0; i < lumaValues1.length; i++) {\r\n\t\t\t\tsigsqx += Math.pow((lumaValues1[ i ] - averageLumaValue1), 2);\r\n\t\t\t\tsigsqy += Math.pow((lumaValues2[ i ] - averageLumaValue2), 2);\r\n\r\n\t\t\t\tsigxy += (lumaValues1[ i ] - averageLumaValue1) * (lumaValues2[ i ] - averageLumaValue2);\r\n\t\t\t}\r\n\r\n\t\t\tvar numPixelsInWin = lumaValues1.length - 1;\r\n\t\t\tsigsqx /= numPixelsInWin;\r\n\t\t\tsigsqy /= numPixelsInWin;\r\n\t\t\tsigxy /= numPixelsInWin;\r\n\r\n\t\t\t//perform ssim calculation on window\r\n\t\t\tvar numerator   = (2 * averageLumaValue1 * averageLumaValue2 + c1) * (2 * sigxy + c2),\r\n\t\t\t\tdenominator = (Math.pow(averageLumaValue1, 2) + Math.pow(averageLumaValue2, 2) + c1) * (sigsqx + sigsqy + c2),\r\n\t\t\t\tssim        = numerator / denominator;\r\n\r\n\t\t\tmssim += ssim;\r\n\t\t\tnumWindows++;\r\n\r\n\t\t});\r\n\t\treturn mssim / numWindows;\r\n\t}\r\n\r\n\tprivate _iterate(image1 : PointContainer, image2 : PointContainer, callback : (lumaValues1 : number[], lumaValues2 : number[], averageLumaValue1 : number, averageLumaValue2 : number) => void) {\r\n\t\tvar windowSize = 8,\r\n\t\t\twidth      = image1.getWidth(),\r\n\t\t\theight     = image1.getHeight();\r\n\r\n\t\tfor (var y = 0; y < height; y += windowSize) {\r\n\t\t\tfor (var x = 0; x < width; x += windowSize) {\r\n\t\t\t\t// avoid out-of-width/height\r\n\t\t\t\tvar windowWidth  = Math.min(windowSize, width - x),\r\n\t\t\t\t\twindowHeight = Math.min(windowSize, height - y);\r\n\r\n\t\t\t\tvar lumaValues1  = this._calculateLumaValuesForWindow(image1, x, y, windowWidth, windowHeight),\r\n\t\t\t\t\tlumaValues2  = this._calculateLumaValuesForWindow(image2, x, y, windowWidth, windowHeight),\r\n\t\t\t\t\taverageLuma1 = this._calculateAverageLuma(lumaValues1),\r\n\t\t\t\t\taverageLuma2 = this._calculateAverageLuma(lumaValues2);\r\n\r\n\t\t\t\tcallback(lumaValues1, lumaValues2, averageLuma1, averageLuma2);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _calculateLumaValuesForWindow(image : PointContainer, x : number, y : number, width : number, height : number) : number[] {\r\n\t\tvar pointArray            = image.getPointArray(),\r\n\t\t\tlumaValues : number[] = [],\r\n\t\t\tcounter               = 0;\r\n\r\n\t\tfor (var j = y; j < y + height; j++) {\r\n\t\t\tvar offset = j * image.getWidth();\r\n\t\t\tfor (var i = x; i < x + width; i++) {\r\n\t\t\t\tvar point             = pointArray[ offset + i ];\r\n\t\t\t\tlumaValues[ counter ] = point.r * Y.RED + point.g * Y.GREEN + point.b * Y.BLUE;\r\n\t\t\t\tcounter++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn lumaValues;\r\n\t}\r\n\r\n\tprivate _calculateAverageLuma(lumaValues : number[]) : number {\r\n\t\tvar sumLuma = 0.0;\r\n\t\tfor (var i = 0; i < lumaValues.length; i++) {\r\n\t\t\tsumLuma += lumaValues[ i ];\r\n\t\t}\r\n\r\n\t\treturn sumLuma / lumaValues.length;\r\n\t}\r\n\r\n}\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/quality/ssim.ts\n **/","/**\r\n * @preserve\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * iq.ts - Image Quantization Library\r\n */\r\nimport * as arithmetic from \"./arithmetic\"\r\nimport {HueStatistics} from \"./hueStatistics\"\r\nimport {Palette} from \"./palette\"\r\nimport {Point} from \"./point\"\r\nimport {PointContainer} from \"./pointContainer\"\r\n\r\nexport {\r\n\tPoint,\r\n\tPointContainer,\r\n\tPalette,\r\n\tHueStatistics,\r\n\tarithmetic\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/utils/index.ts\n **/"],"sourceRoot":""}